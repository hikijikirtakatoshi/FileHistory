{"id":"../node_modules/web3-eth/dist/web3-eth.umd.js","dependencies":[{"name":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/package.json","includedInParent":true,"mtime":1560244257178},{"name":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/package.json","includedInParent":true,"mtime":1560416584036},{"name":"web3-core-helpers","loc":{"line":2,"column":92},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-core-helpers/dist/web3-core-helpers.umd.js"},{"name":"web3-eth-accounts","loc":{"line":2,"column":122},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-accounts/dist/web3-eth-accounts.umd.js"},{"name":"web3-eth-ens","loc":{"line":2,"column":152},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-ens/dist/web3-eth-ens.umd.js"},{"name":"web3-eth-contract","loc":{"line":2,"column":177},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-contract/dist/web3-eth-contract.umd.js"},{"name":"web3-eth-personal","loc":{"line":2,"column":207},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-personal/dist/web3-eth-personal.umd.js"},{"name":"web3-eth-abi","loc":{"line":2,"column":237},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-abi/dist/web3-eth-abi.umd.js"},{"name":"web3-eth-iban","loc":{"line":2,"column":262},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-iban/dist/web3-eth-iban.umd.js"},{"name":"web3-net","loc":{"line":2,"column":288},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-net/dist/web3-net.umd.js"},{"name":"web3-utils","loc":{"line":2,"column":309},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-utils/dist/web3-utils.umd.js"},{"name":"@babel/runtime/regenerator","loc":{"line":2,"column":332},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/regenerator/index.js"},{"name":"@babel/runtime/helpers/asyncToGenerator","loc":{"line":2,"column":371},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/asyncToGenerator.js"},{"name":"@babel/runtime/helpers/classCallCheck","loc":{"line":2,"column":423},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/classCallCheck.js"},{"name":"@babel/runtime/helpers/createClass","loc":{"line":2,"column":473},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/createClass.js"},{"name":"ethereumjs-tx","loc":{"line":2,"column":520},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/ethereumjs-tx/es5/index.js"},{"name":"@babel/runtime/helpers/possibleConstructorReturn","loc":{"line":2,"column":546},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"},{"name":"@babel/runtime/helpers/getPrototypeOf","loc":{"line":2,"column":607},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/getPrototypeOf.js"},{"name":"@babel/runtime/helpers/inherits","loc":{"line":2,"column":657},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/inherits.js"},{"name":"web3-core-method","loc":{"line":2,"column":701},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-core-method/dist/web3-core-method.umd.js"},{"name":"@babel/runtime/helpers/get","loc":{"line":2,"column":730},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/get.js"},{"name":"lodash/isString","loc":{"line":2,"column":769},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/lodash/isString.js"},{"name":"web3-core-subscriptions","loc":{"line":2,"column":797},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-core-subscriptions/dist/web3-core-subscriptions.umd.js"},{"name":"web3-providers","loc":{"line":2,"column":833},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js"},{"name":"@babel/runtime/helpers/set","loc":{"line":2,"column":860},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/set.js"},{"name":"web3-core","loc":{"line":2,"column":899},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-core/dist/web3-core.umd.js"},{"name":"buffer","parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth/dist/web3-eth.umd.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var define;\nvar global = arguments[3];\nvar Buffer = require(\"buffer\").Buffer;\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('web3-core-helpers'), require('web3-eth-accounts'), require('web3-eth-ens'), require('web3-eth-contract'), require('web3-eth-personal'), require('web3-eth-abi'), require('web3-eth-iban'), require('web3-net'), require('web3-utils'), require('@babel/runtime/regenerator'), require('@babel/runtime/helpers/asyncToGenerator'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass'), require('ethereumjs-tx'), require('@babel/runtime/helpers/possibleConstructorReturn'), require('@babel/runtime/helpers/getPrototypeOf'), require('@babel/runtime/helpers/inherits'), require('web3-core-method'), require('@babel/runtime/helpers/get'), require('lodash/isString'), require('web3-core-subscriptions'), require('web3-providers'), require('@babel/runtime/helpers/set'), require('web3-core')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'web3-core-helpers', 'web3-eth-accounts', 'web3-eth-ens', 'web3-eth-contract', 'web3-eth-personal', 'web3-eth-abi', 'web3-eth-iban', 'web3-net', 'web3-utils', '@babel/runtime/regenerator', '@babel/runtime/helpers/asyncToGenerator', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass', 'ethereumjs-tx', '@babel/runtime/helpers/possibleConstructorReturn', '@babel/runtime/helpers/getPrototypeOf', '@babel/runtime/helpers/inherits', 'web3-core-method', '@babel/runtime/helpers/get', 'lodash/isString', 'web3-core-subscriptions', 'web3-providers', '@babel/runtime/helpers/set', 'web3-core'], factory) :\n    (global = global || self, factory(global.Web3Eth = {}, global.web3CoreHelpers, global.web3EthAccounts, global.web3EthEns, global.web3EthContract, global.web3EthPersonal, global.web3EthAbi, global.web3EthIban, global.web3Net, global.Utils, global._regeneratorRuntime, global._asyncToGenerator, global._classCallCheck, global._createClass, global.EthereumTx, global._possibleConstructorReturn, global._getPrototypeOf, global._inherits, global.web3CoreMethod, global._get, global.isString, global.web3CoreSubscriptions, global.web3Providers, global._set, global.web3Core));\n}(this, function (exports, web3CoreHelpers, web3EthAccounts, web3EthEns, web3EthContract, web3EthPersonal, web3EthAbi, web3EthIban, web3Net, Utils, _regeneratorRuntime, _asyncToGenerator, _classCallCheck, _createClass, EthereumTx, _possibleConstructorReturn, _getPrototypeOf, _inherits, web3CoreMethod, _get, isString, web3CoreSubscriptions, web3Providers, _set, web3Core) { 'use strict';\n\n    _regeneratorRuntime = _regeneratorRuntime && _regeneratorRuntime.hasOwnProperty('default') ? _regeneratorRuntime['default'] : _regeneratorRuntime;\n    _asyncToGenerator = _asyncToGenerator && _asyncToGenerator.hasOwnProperty('default') ? _asyncToGenerator['default'] : _asyncToGenerator;\n    _classCallCheck = _classCallCheck && _classCallCheck.hasOwnProperty('default') ? _classCallCheck['default'] : _classCallCheck;\n    _createClass = _createClass && _createClass.hasOwnProperty('default') ? _createClass['default'] : _createClass;\n    EthereumTx = EthereumTx && EthereumTx.hasOwnProperty('default') ? EthereumTx['default'] : EthereumTx;\n    _possibleConstructorReturn = _possibleConstructorReturn && _possibleConstructorReturn.hasOwnProperty('default') ? _possibleConstructorReturn['default'] : _possibleConstructorReturn;\n    _getPrototypeOf = _getPrototypeOf && _getPrototypeOf.hasOwnProperty('default') ? _getPrototypeOf['default'] : _getPrototypeOf;\n    _inherits = _inherits && _inherits.hasOwnProperty('default') ? _inherits['default'] : _inherits;\n    _get = _get && _get.hasOwnProperty('default') ? _get['default'] : _get;\n    isString = isString && isString.hasOwnProperty('default') ? isString['default'] : isString;\n    _set = _set && _set.hasOwnProperty('default') ? _set['default'] : _set;\n\n    var TransactionSigner =\n    function () {\n      function TransactionSigner(utils, formatters) {\n        _classCallCheck(this, TransactionSigner);\n        this.utils = utils;\n        this.formatters = formatters;\n      }\n      _createClass(TransactionSigner, [{\n        key: \"sign\",\n        value: function () {\n          var _sign = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee(transaction, privateKey) {\n            var ethTx, validationResult, rlpEncoded, rawTransaction, transactionHash;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (privateKey) {\n                      _context.next = 2;\n                      break;\n                    }\n                    throw new Error('No privateKey given to the TransactionSigner.');\n                  case 2:\n                    if (privateKey.startsWith('0x')) {\n                      privateKey = privateKey.substring(2);\n                    }\n                    ethTx = new EthereumTx(transaction);\n                    ethTx.sign(Buffer.from(privateKey, 'hex'));\n                    validationResult = ethTx.validate(true);\n                    if (!(validationResult !== '')) {\n                      _context.next = 8;\n                      break;\n                    }\n                    throw new Error(\"TransactionSigner Error: \".concat(validationResult));\n                  case 8:\n                    rlpEncoded = ethTx.serialize().toString('hex');\n                    rawTransaction = '0x' + rlpEncoded;\n                    transactionHash = this.utils.keccak256(rawTransaction);\n                    return _context.abrupt(\"return\", {\n                      messageHash: Buffer.from(ethTx.hash(false)).toString('hex'),\n                      v: '0x' + Buffer.from(ethTx.v).toString('hex'),\n                      r: '0x' + Buffer.from(ethTx.r).toString('hex'),\n                      s: '0x' + Buffer.from(ethTx.s).toString('hex'),\n                      rawTransaction: rawTransaction,\n                      transactionHash: transactionHash\n                    });\n                  case 12:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n          function sign(_x, _x2) {\n            return _sign.apply(this, arguments);\n          }\n          return sign;\n        }()\n      }, {\n        key: \"type\",\n        get: function get() {\n          return 'TransactionSigner';\n        }\n      }]);\n      return TransactionSigner;\n    }();\n\n    var GetBlockMethod =\n    function (_AbstractGetBlockMeth) {\n      _inherits(GetBlockMethod, _AbstractGetBlockMeth);\n      function GetBlockMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockMethod).call(this, 'eth_getBlockByNumber', utils, formatters, moduleInstance));\n      }\n      _createClass(GetBlockMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getBlockByHash';\n          }\n          _get(_getPrototypeOf(GetBlockMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetBlockMethod;\n    }(web3CoreMethod.AbstractGetBlockMethod);\n\n    var GetUncleMethod =\n    function (_AbstractGetUncleMeth) {\n      _inherits(GetUncleMethod, _AbstractGetUncleMeth);\n      function GetUncleMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetUncleMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetUncleMethod).call(this, 'eth_getUncleByBlockNumberAndIndex', utils, formatters, moduleInstance));\n      }\n      _createClass(GetUncleMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getUncleByBlockHashAndIndex';\n          }\n          _get(_getPrototypeOf(GetUncleMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetUncleMethod;\n    }(web3CoreMethod.AbstractGetUncleMethod);\n\n    var GetBlockTransactionCountMethod =\n    function (_AbstractGetBlockTran) {\n      _inherits(GetBlockTransactionCountMethod, _AbstractGetBlockTran);\n      function GetBlockTransactionCountMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockTransactionCountMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockTransactionCountMethod).call(this, 'eth_getBlockTransactionCountByNumber', utils, formatters, moduleInstance));\n      }\n      _createClass(GetBlockTransactionCountMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getBlockTransactionCountByHash';\n          }\n          _get(_getPrototypeOf(GetBlockTransactionCountMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetBlockTransactionCountMethod;\n    }(web3CoreMethod.AbstractGetBlockTransactionCountMethod);\n\n    var GetBlockUncleCountMethod =\n    function (_AbstractGetBlockUncl) {\n      _inherits(GetBlockUncleCountMethod, _AbstractGetBlockUncl);\n      function GetBlockUncleCountMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockUncleCountMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockUncleCountMethod).call(this, 'eth_getUncleCountByBlockNumber', utils, formatters, moduleInstance));\n      }\n      _createClass(GetBlockUncleCountMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getUncleCountByBlockHash';\n          }\n          _get(_getPrototypeOf(GetBlockUncleCountMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetBlockUncleCountMethod;\n    }(web3CoreMethod.AbstractGetBlockUncleCountMethod);\n\n    var GetTransactionFromBlockMethod =\n    function (_AbstractGetTransacti) {\n      _inherits(GetTransactionFromBlockMethod, _AbstractGetTransacti);\n      function GetTransactionFromBlockMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetTransactionFromBlockMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionFromBlockMethod).call(this, 'eth_getTransactionByBlockNumberAndIndex', utils, formatters, moduleInstance));\n      }\n      _createClass(GetTransactionFromBlockMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getTransactionByBlockHashAndIndex';\n          }\n          _get(_getPrototypeOf(GetTransactionFromBlockMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetTransactionFromBlockMethod;\n    }(web3CoreMethod.AbstractGetTransactionFromBlockMethod);\n\n    var EthSignTransactionMethod =\n    function (_SignTransactionMetho) {\n      _inherits(EthSignTransactionMethod, _SignTransactionMetho);\n      function EthSignTransactionMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, EthSignTransactionMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(EthSignTransactionMethod).call(this, utils, formatters, moduleInstance));\n      }\n      _createClass(EthSignTransactionMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputTransactionFormatter(this.parameters[0], moduleInstance);\n        }\n      }, {\n        key: \"execute\",\n        value: function execute() {\n          if (isString(this.parameters[1])) {\n            var account = this.moduleInstance.accounts.wallet[this.parameters[1]];\n            if (account) {\n              return this.moduleInstance.transactionSigner.sign(this.parameters[0], account.privateKey);\n            }\n          }\n          return _get(_getPrototypeOf(EthSignTransactionMethod.prototype), \"execute\", this).call(this);\n        }\n      }]);\n      return EthSignTransactionMethod;\n    }(web3CoreMethod.SignTransactionMethod);\n\n    var EthSignMethod =\n    function (_SignMethod) {\n      _inherits(EthSignMethod, _SignMethod);\n      function EthSignMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, EthSignMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(EthSignMethod).call(this, utils, formatters, moduleInstance));\n      }\n      _createClass(EthSignMethod, [{\n        key: \"execute\",\n        value: function execute() {\n          if (this.moduleInstance.accounts.wallet[this.parameters[1]]) {\n            return this.signLocally();\n          }\n          return _get(_getPrototypeOf(EthSignMethod.prototype), \"execute\", this).call(this);\n        }\n      }, {\n        key: \"signLocally\",\n        value: function () {\n          var _signLocally = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee() {\n            var signedMessage;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    this.beforeExecution(this.moduleInstance);\n                    signedMessage = this.moduleInstance.accounts.sign(this.parameters[1], this.moduleInstance.accounts.wallet[this.parameters[0]].privateKey);\n                    if (!this.callback) {\n                      _context.next = 6;\n                      break;\n                    }\n                    this.callback(false, signedMessage);\n                    return _context.abrupt(\"return\");\n                  case 6:\n                    return _context.abrupt(\"return\", signedMessage);\n                  case 9:\n                    _context.prev = 9;\n                    _context.t0 = _context[\"catch\"](0);\n                    if (!this.callback) {\n                      _context.next = 14;\n                      break;\n                    }\n                    this.callback(_context.t0, null);\n                    return _context.abrupt(\"return\");\n                  case 14:\n                    throw _context.t0;\n                  case 15:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this, [[0, 9]]);\n          }));\n          function signLocally() {\n            return _signLocally.apply(this, arguments);\n          }\n          return signLocally;\n        }()\n      }]);\n      return EthSignMethod;\n    }(web3CoreMethod.SignMethod);\n\n    var EthGetAccountsMethod =\n    function (_GetAccountsMethod) {\n      _inherits(EthGetAccountsMethod, _GetAccountsMethod);\n      function EthGetAccountsMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, EthGetAccountsMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(EthGetAccountsMethod).call(this, utils, formatters, moduleInstance));\n      }\n      _createClass(EthGetAccountsMethod, [{\n        key: \"execute\",\n        value: function execute() {\n          if (this.moduleInstance.accounts.wallet.accountsIndex) {\n            var accounts = [];\n            for (var i = 0; i < this.moduleInstance.accounts.wallet.accountsIndex; i++) {\n              accounts.push(this.moduleInstance.accounts.wallet[i].address);\n            }\n            return Promise.resolve(accounts);\n          }\n          return _get(_getPrototypeOf(EthGetAccountsMethod.prototype), \"execute\", this).call(this);\n        }\n      }]);\n      return EthGetAccountsMethod;\n    }(web3CoreMethod.GetAccountsMethod);\n\n    var MethodFactory =\n    function (_AbstractMethodFactor) {\n      _inherits(MethodFactory, _AbstractMethodFactor);\n      function MethodFactory(utils, formatters) {\n        var _this;\n        _classCallCheck(this, MethodFactory);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(MethodFactory).call(this, utils, formatters));\n        _this.methods = {\n          getNodeInfo: web3CoreMethod.GetNodeInfoMethod,\n          getProtocolVersion: web3CoreMethod.GetProtocolVersionMethod,\n          getCoinbase: web3CoreMethod.GetCoinbaseMethod,\n          isMining: web3CoreMethod.IsMiningMethod,\n          getHashrate: web3CoreMethod.GetHashrateMethod,\n          isSyncing: web3CoreMethod.IsSyncingMethod,\n          getGasPrice: web3CoreMethod.GetGasPriceMethod,\n          getAccounts: EthGetAccountsMethod,\n          getBlockNumber: web3CoreMethod.GetBlockNumberMethod,\n          getBalance: web3CoreMethod.GetBalanceMethod,\n          getStorageAt: web3CoreMethod.GetStorageAtMethod,\n          getCode: web3CoreMethod.GetCodeMethod,\n          getBlock: GetBlockMethod,\n          getUncle: GetUncleMethod,\n          getBlockTransactionCount: GetBlockTransactionCountMethod,\n          getBlockUncleCount: GetBlockUncleCountMethod,\n          getTransaction: web3CoreMethod.GetTransactionMethod,\n          getPendingTransactions: web3CoreMethod.GetPendingTransactionsMethod,\n          getTransactionFromBlock: GetTransactionFromBlockMethod,\n          getTransactionReceipt: web3CoreMethod.GetTransactionReceiptMethod,\n          getTransactionCount: web3CoreMethod.GetTransactionCountMethod,\n          sendSignedTransaction: web3CoreMethod.SendRawTransactionMethod,\n          signTransaction: EthSignTransactionMethod,\n          sendTransaction: web3CoreMethod.EthSendTransactionMethod,\n          sign: EthSignMethod,\n          call: web3CoreMethod.CallMethod,\n          estimateGas: web3CoreMethod.EstimateGasMethod,\n          submitWork: web3CoreMethod.SubmitWorkMethod,\n          getWork: web3CoreMethod.GetWorkMethod,\n          getPastLogs: web3CoreMethod.GetPastLogsMethod,\n          requestAccounts: web3CoreMethod.RequestAccountsMethod,\n          getId: web3CoreMethod.VersionMethod,\n          getChainId: web3CoreMethod.ChainIdMethod,\n          getProof: web3CoreMethod.GetProofMethod\n        };\n        return _this;\n      }\n      return MethodFactory;\n    }(web3CoreMethod.AbstractMethodFactory);\n\n    var SubscriptionsFactory =\n    function () {\n      function SubscriptionsFactory(utils, formatters) {\n        _classCallCheck(this, SubscriptionsFactory);\n        this.utils = utils;\n        this.formatters = formatters;\n      }\n      _createClass(SubscriptionsFactory, [{\n        key: \"getSubscription\",\n        value: function getSubscription(moduleInstance, type, options) {\n          switch (type) {\n            case 'logs':\n              return new web3CoreSubscriptions.LogSubscription(options, this.utils, this.formatters, moduleInstance, new web3CoreMethod.GetPastLogsMethod(this.utils, this.formatters, moduleInstance));\n            case 'newBlockHeaders':\n              return new web3CoreSubscriptions.NewHeadsSubscription(this.utils, this.formatters, moduleInstance);\n            case 'pendingTransactions':\n              return new web3CoreSubscriptions.NewPendingTransactionsSubscription(this.utils, this.formatters, moduleInstance);\n            case 'syncing':\n              return new web3CoreSubscriptions.SyncingSubscription(this.utils, this.formatters, moduleInstance);\n            default:\n              throw new Error(\"Unknown subscription: \".concat(type));\n          }\n        }\n      }]);\n      return SubscriptionsFactory;\n    }();\n\n    var Eth =\n    function (_AbstractWeb3Module) {\n      _inherits(Eth, _AbstractWeb3Module);\n      function Eth(provider, methodFactory, net, accounts, personal, Iban, abiCoder, ens, utils, formatters, subscriptionsFactory, contractModuleFactory, options, nodeNet) {\n        var _this;\n        _classCallCheck(this, Eth);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Eth).call(this, provider, options, methodFactory, nodeNet));\n        _this.net = net;\n        _this.accounts = accounts;\n        _this.personal = personal;\n        _this.Iban = Iban;\n        _this.abi = abiCoder;\n        _this.ens = ens;\n        _this.utils = utils;\n        _this.formatters = formatters;\n        _this.subscriptionsFactory = subscriptionsFactory;\n        _this.contractModuleFactory = contractModuleFactory;\n        _this.initiatedContracts = [];\n        _this._transactionSigner = options.transactionSigner;\n        _this.Contract = function (abi, address) {\n          var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n          var contract = _this.contractModuleFactory.createContract(_this.currentProvider, _this.accounts, abi, address, {\n            defaultAccount: options.from || options.defaultAccount || _this.defaultAccount,\n            defaultBlock: options.defaultBlock || _this.defaultBlock,\n            defaultGas: options.gas || options.defaultGas || _this.defaultGas,\n            defaultGasPrice: options.gasPrice || options.defaultGasPrice || _this.defaultGasPrice,\n            transactionBlockTimeout: options.transactionBlockTimeout || _this.transactionBlockTimeout,\n            transactionConfirmationBlocks: options.transactionConfirmationBlocks || _this.transactionConfirmationBlocks,\n            transactionPollingTimeout: options.transactionPollingTimeout || _this.transactionPollingTimeout,\n            transactionSigner: _this.transactionSigner,\n            data: options.data\n          });\n          _this.initiatedContracts.push(contract);\n          return contract;\n        };\n        return _this;\n      }\n      _createClass(Eth, [{\n        key: \"clearSubscriptions\",\n        value: function clearSubscriptions() {\n          return _get(_getPrototypeOf(Eth.prototype), \"clearSubscriptions\", this).call(this, 'eth_unsubscribe');\n        }\n      }, {\n        key: \"subscribe\",\n        value: function subscribe(type, options, callback) {\n          return this.subscriptionsFactory.getSubscription(this, type, options).subscribe(callback);\n        }\n      }, {\n        key: \"setProvider\",\n        value: function setProvider(provider, net) {\n          var setContractProviders = this.initiatedContracts.every(function (contract) {\n            return contract.setProvider(provider, net);\n          });\n          return this.net.setProvider(provider, net) && this.personal.setProvider(provider, net) && _get(_getPrototypeOf(Eth.prototype), \"setProvider\", this).call(this, provider, net) && setContractProviders;\n        }\n      }, {\n        key: \"transactionSigner\",\n        get: function get() {\n          return this._transactionSigner;\n        }\n        ,\n        set: function set(transactionSigner) {\n          if (transactionSigner.type && transactionSigner.type === 'TransactionSigner') {\n            throw new Error('Invalid TransactionSigner given!');\n          }\n          this._transactionSigner = transactionSigner;\n          this.accounts.transactionSigner = transactionSigner;\n          this.ens.transactionSigner = transactionSigner;\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionSigner = transactionSigner;\n          });\n        }\n      }, {\n        key: \"defaultGasPrice\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultGasPrice = value;\n          });\n          this.net.defaultGasPrice = value;\n          this.personal.defaultGasPrice = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultGasPrice\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultGasPrice\", this);\n        }\n      }, {\n        key: \"defaultGas\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultGas = value;\n          });\n          this.net.defaultGas = value;\n          this.personal.defaultGas = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultGas\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultGas\", this);\n        }\n      }, {\n        key: \"transactionBlockTimeout\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionBlockTimeout = value;\n          });\n          this.net.transactionBlockTimeout = value;\n          this.personal.transactionBlockTimeout = value;\n          _set(_getPrototypeOf(Eth.prototype), \"transactionBlockTimeout\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"transactionBlockTimeout\", this);\n        }\n      }, {\n        key: \"transactionConfirmationBlocks\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionConfirmationBlocks = value;\n          });\n          this.net.transactionConfirmationBlocks = value;\n          this.personal.transactionConfirmationBlocks = value;\n          _set(_getPrototypeOf(Eth.prototype), \"transactionConfirmationBlocks\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"transactionConfirmationBlocks\", this);\n        }\n      }, {\n        key: \"transactionPollingTimeout\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionPollingTimeout = value;\n          });\n          this.net.transactionPollingTimeout = value;\n          this.personal.transactionPollingTimeout = value;\n          _set(_getPrototypeOf(Eth.prototype), \"transactionPollingTimeout\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"transactionPollingTimeout\", this);\n        }\n      }, {\n        key: \"defaultAccount\",\n        set: function set(value) {\n          var _this2 = this;\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultAccount = _this2.utils.toChecksumAddress(value);\n          });\n          this.net.defaultAccount = value;\n          this.personal.defaultAccount = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultAccount\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultAccount\", this);\n        }\n      }, {\n        key: \"defaultBlock\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultBlock = value;\n          });\n          this.net.defaultBlock = value;\n          this.personal.defaultBlock = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultBlock\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultBlock\", this);\n        }\n      }]);\n      return Eth;\n    }(web3Core.AbstractWeb3Module);\n\n    function TransactionSigner$1() {\n      return new TransactionSigner(Utils, web3CoreHelpers.formatters);\n    }\n    function Eth$1(provider) {\n      var net = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (!options.transactionSigner || options.transactionSigner.type === 'TransactionSigner') {\n        options.transactionSigner = new TransactionSigner$1();\n      }\n      var resolvedProvider = new web3Providers.ProviderResolver().resolve(provider, net);\n      var accounts = new web3EthAccounts.Accounts(resolvedProvider, null, options);\n      var abiCoder = new web3EthAbi.AbiCoder();\n      return new Eth(resolvedProvider, new MethodFactory(Utils, web3CoreHelpers.formatters), new web3Net.Network(resolvedProvider, null, options), accounts, new web3EthPersonal.Personal(resolvedProvider, null, accounts, options), web3EthIban.Iban, abiCoder, new web3EthEns.Ens(resolvedProvider, null, accounts, options), Utils, web3CoreHelpers.formatters, new SubscriptionsFactory(Utils, web3CoreHelpers.formatters), new web3EthContract.ContractModuleFactory(Utils, web3CoreHelpers.formatters, abiCoder, accounts), options, net);\n    }\n\n    exports.Eth = Eth$1;\n    exports.TransactionSigner = TransactionSigner$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":1,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":2,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":3,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":4,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":5,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":6,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":7,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":8,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":9,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":10,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":11,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":12,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":13,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":14,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":15,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":16,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":17,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":18,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":19,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":20,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":21,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":22,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":23,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":24,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":25,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":26,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":27,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":28,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":29,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":30,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":31,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":32,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":33,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":34,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":35,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":36,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":37,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":38,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":39,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":40,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":41,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":42,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":43,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":44,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":45,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":46,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":47,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":48,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":49,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":50,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":51,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":52,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":53,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":54,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":55,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":56,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":57,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":58,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":59,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":60,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":61,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":62,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":63,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":64,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":65,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":66,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":67,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":68,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":69,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":70,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":71,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":72,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":73,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":74,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":75,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":76,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":77,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":78,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":79,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":80,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":81,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":82,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":83,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":84,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":85,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":86,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":87,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":88,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":89,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":90,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":91,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":92,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":93,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":94,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":95,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":96,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":97,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":98,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":99,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":100,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":101,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":102,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":103,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":104,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":105,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":106,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":107,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":108,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":109,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":110,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":111,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":112,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":113,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":114,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":115,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":116,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":117,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":118,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":119,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":120,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":121,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":122,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":123,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":124,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":125,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":126,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":127,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":128,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":129,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":130,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":131,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":132,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":133,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":134,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":135,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":136,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":137,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":138,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":139,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":140,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":141,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":142,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":143,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":144,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":145,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":146,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":147,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":148,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":149,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":150,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":151,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":152,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":153,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":154,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":155,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":156,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":157,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":158,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":159,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":160,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":161,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":162,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":163,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":164,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":165,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":166,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":167,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":168,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":169,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":170,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":171,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":172,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":173,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":174,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":175,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":176,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":177,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":178,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":179,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":180,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":181,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":182,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":183,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":184,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":185,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":186,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":187,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":188,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":189,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":190,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":191,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":192,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":193,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":194,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":195,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":196,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":197,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":198,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":199,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":200,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":201,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":202,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":203,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":204,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":205,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":206,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":207,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":208,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":209,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":210,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":211,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":212,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":213,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":214,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":215,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":216,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":217,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":218,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":219,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":220,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":221,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":222,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":223,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":224,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":225,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":226,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":227,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":228,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":229,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":230,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":231,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":232,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":233,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":234,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":235,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":236,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":237,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":238,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":239,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":240,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":241,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":242,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":243,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":244,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":245,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":246,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":247,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":248,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":249,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":250,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":251,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":252,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":253,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":254,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":255,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":256,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":257,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":258,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":259,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":260,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":261,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":262,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":263,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":264,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":265,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":266,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":267,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":268,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":269,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":270,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":271,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":272,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":273,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":274,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":275,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":276,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":277,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":278,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":279,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":280,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":281,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":282,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":283,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":284,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":285,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":286,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":287,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":288,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":289,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":290,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":291,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":292,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":293,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":294,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":295,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":296,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":297,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":298,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":299,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":300,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":301,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":302,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":303,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":304,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":305,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":306,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":307,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":308,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":309,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":310,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":311,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":312,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":313,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":314,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":315,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":316,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":317,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":318,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":319,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":320,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":321,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":322,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":323,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":324,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":325,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":326,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":327,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":328,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":329,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":330,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":331,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":332,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":333,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":334,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":335,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":336,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":337,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":338,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":339,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":340,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":341,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":342,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":343,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":344,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":345,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":346,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":347,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":348,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":349,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":350,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":351,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":352,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":353,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":354,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":355,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":356,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":357,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":358,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":359,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":360,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":361,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":362,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":363,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":364,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":365,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":366,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":367,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":368,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":369,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":370,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":371,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":372,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":373,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":374,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":375,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":376,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":377,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":378,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":379,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":380,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":381,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":382,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":383,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":384,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":385,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":386,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":387,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":388,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":389,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":390,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":391,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":392,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":393,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":394,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":395,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":396,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":397,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":398,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":399,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":400,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":401,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":402,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":403,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":404,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":405,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":406,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":407,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":408,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":409,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":410,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":411,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":412,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":413,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":414,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":415,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":416,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":417,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":418,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":419,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":420,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":421,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":422,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":423,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":424,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":425,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":426,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":427,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":428,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":429,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":430,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":431,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":432,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":433,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":434,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":435,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":436,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":437,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":438,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":439,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":440,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":441,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":442,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":443,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":444,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":445,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":446,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":447,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":448,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":449,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":450,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":451,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":452,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":453,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":454,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":455,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":456,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":457,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":458,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":459,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":460,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":461,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":462,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":463,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":464,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":465,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":466,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":467,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":468,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":469,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":470,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":471,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":472,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":473,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":474,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":475,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":476,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":477,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":478,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":479,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":480,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":481,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":482,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":483,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":484,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":485,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":486,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":487,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":488,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":489,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":490,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":491,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":492,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":493,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":494,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":495,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":496,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":497,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":498,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":499,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":500,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":501,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":502,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":503,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":504,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":505,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":506,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":507,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":508,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":509,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":510,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":511,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":512,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":513,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":514,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":515,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":516,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":517,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":518,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":519,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":520,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":521,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":522,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":523,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":524,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":525,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":526,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":527,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":528,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":529,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":530,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":531,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":532,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":533,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":534,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":535,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":536,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":537,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":538,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":539,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":540,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":541,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":542,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":543,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":544,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":545,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":546,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":547,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":548,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":549,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":550,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":551,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":552,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":553,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":554,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":555,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":556,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":557,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":558,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":559,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":560,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":561,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":562,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":563,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":564,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/web3-eth/dist/web3-eth.umd.js","original":{"line":565,"column":0},"generated":{"line":568,"column":0}}],"sources":{"../node_modules/web3-eth/dist/web3-eth.umd.js":"(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('web3-core-helpers'), require('web3-eth-accounts'), require('web3-eth-ens'), require('web3-eth-contract'), require('web3-eth-personal'), require('web3-eth-abi'), require('web3-eth-iban'), require('web3-net'), require('web3-utils'), require('@babel/runtime/regenerator'), require('@babel/runtime/helpers/asyncToGenerator'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass'), require('ethereumjs-tx'), require('@babel/runtime/helpers/possibleConstructorReturn'), require('@babel/runtime/helpers/getPrototypeOf'), require('@babel/runtime/helpers/inherits'), require('web3-core-method'), require('@babel/runtime/helpers/get'), require('lodash/isString'), require('web3-core-subscriptions'), require('web3-providers'), require('@babel/runtime/helpers/set'), require('web3-core')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'web3-core-helpers', 'web3-eth-accounts', 'web3-eth-ens', 'web3-eth-contract', 'web3-eth-personal', 'web3-eth-abi', 'web3-eth-iban', 'web3-net', 'web3-utils', '@babel/runtime/regenerator', '@babel/runtime/helpers/asyncToGenerator', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass', 'ethereumjs-tx', '@babel/runtime/helpers/possibleConstructorReturn', '@babel/runtime/helpers/getPrototypeOf', '@babel/runtime/helpers/inherits', 'web3-core-method', '@babel/runtime/helpers/get', 'lodash/isString', 'web3-core-subscriptions', 'web3-providers', '@babel/runtime/helpers/set', 'web3-core'], factory) :\n    (global = global || self, factory(global.Web3Eth = {}, global.web3CoreHelpers, global.web3EthAccounts, global.web3EthEns, global.web3EthContract, global.web3EthPersonal, global.web3EthAbi, global.web3EthIban, global.web3Net, global.Utils, global._regeneratorRuntime, global._asyncToGenerator, global._classCallCheck, global._createClass, global.EthereumTx, global._possibleConstructorReturn, global._getPrototypeOf, global._inherits, global.web3CoreMethod, global._get, global.isString, global.web3CoreSubscriptions, global.web3Providers, global._set, global.web3Core));\n}(this, function (exports, web3CoreHelpers, web3EthAccounts, web3EthEns, web3EthContract, web3EthPersonal, web3EthAbi, web3EthIban, web3Net, Utils, _regeneratorRuntime, _asyncToGenerator, _classCallCheck, _createClass, EthereumTx, _possibleConstructorReturn, _getPrototypeOf, _inherits, web3CoreMethod, _get, isString, web3CoreSubscriptions, web3Providers, _set, web3Core) { 'use strict';\n\n    _regeneratorRuntime = _regeneratorRuntime && _regeneratorRuntime.hasOwnProperty('default') ? _regeneratorRuntime['default'] : _regeneratorRuntime;\n    _asyncToGenerator = _asyncToGenerator && _asyncToGenerator.hasOwnProperty('default') ? _asyncToGenerator['default'] : _asyncToGenerator;\n    _classCallCheck = _classCallCheck && _classCallCheck.hasOwnProperty('default') ? _classCallCheck['default'] : _classCallCheck;\n    _createClass = _createClass && _createClass.hasOwnProperty('default') ? _createClass['default'] : _createClass;\n    EthereumTx = EthereumTx && EthereumTx.hasOwnProperty('default') ? EthereumTx['default'] : EthereumTx;\n    _possibleConstructorReturn = _possibleConstructorReturn && _possibleConstructorReturn.hasOwnProperty('default') ? _possibleConstructorReturn['default'] : _possibleConstructorReturn;\n    _getPrototypeOf = _getPrototypeOf && _getPrototypeOf.hasOwnProperty('default') ? _getPrototypeOf['default'] : _getPrototypeOf;\n    _inherits = _inherits && _inherits.hasOwnProperty('default') ? _inherits['default'] : _inherits;\n    _get = _get && _get.hasOwnProperty('default') ? _get['default'] : _get;\n    isString = isString && isString.hasOwnProperty('default') ? isString['default'] : isString;\n    _set = _set && _set.hasOwnProperty('default') ? _set['default'] : _set;\n\n    var TransactionSigner =\n    function () {\n      function TransactionSigner(utils, formatters) {\n        _classCallCheck(this, TransactionSigner);\n        this.utils = utils;\n        this.formatters = formatters;\n      }\n      _createClass(TransactionSigner, [{\n        key: \"sign\",\n        value: function () {\n          var _sign = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee(transaction, privateKey) {\n            var ethTx, validationResult, rlpEncoded, rawTransaction, transactionHash;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (privateKey) {\n                      _context.next = 2;\n                      break;\n                    }\n                    throw new Error('No privateKey given to the TransactionSigner.');\n                  case 2:\n                    if (privateKey.startsWith('0x')) {\n                      privateKey = privateKey.substring(2);\n                    }\n                    ethTx = new EthereumTx(transaction);\n                    ethTx.sign(Buffer.from(privateKey, 'hex'));\n                    validationResult = ethTx.validate(true);\n                    if (!(validationResult !== '')) {\n                      _context.next = 8;\n                      break;\n                    }\n                    throw new Error(\"TransactionSigner Error: \".concat(validationResult));\n                  case 8:\n                    rlpEncoded = ethTx.serialize().toString('hex');\n                    rawTransaction = '0x' + rlpEncoded;\n                    transactionHash = this.utils.keccak256(rawTransaction);\n                    return _context.abrupt(\"return\", {\n                      messageHash: Buffer.from(ethTx.hash(false)).toString('hex'),\n                      v: '0x' + Buffer.from(ethTx.v).toString('hex'),\n                      r: '0x' + Buffer.from(ethTx.r).toString('hex'),\n                      s: '0x' + Buffer.from(ethTx.s).toString('hex'),\n                      rawTransaction: rawTransaction,\n                      transactionHash: transactionHash\n                    });\n                  case 12:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n          function sign(_x, _x2) {\n            return _sign.apply(this, arguments);\n          }\n          return sign;\n        }()\n      }, {\n        key: \"type\",\n        get: function get() {\n          return 'TransactionSigner';\n        }\n      }]);\n      return TransactionSigner;\n    }();\n\n    var GetBlockMethod =\n    function (_AbstractGetBlockMeth) {\n      _inherits(GetBlockMethod, _AbstractGetBlockMeth);\n      function GetBlockMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockMethod).call(this, 'eth_getBlockByNumber', utils, formatters, moduleInstance));\n      }\n      _createClass(GetBlockMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getBlockByHash';\n          }\n          _get(_getPrototypeOf(GetBlockMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetBlockMethod;\n    }(web3CoreMethod.AbstractGetBlockMethod);\n\n    var GetUncleMethod =\n    function (_AbstractGetUncleMeth) {\n      _inherits(GetUncleMethod, _AbstractGetUncleMeth);\n      function GetUncleMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetUncleMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetUncleMethod).call(this, 'eth_getUncleByBlockNumberAndIndex', utils, formatters, moduleInstance));\n      }\n      _createClass(GetUncleMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getUncleByBlockHashAndIndex';\n          }\n          _get(_getPrototypeOf(GetUncleMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetUncleMethod;\n    }(web3CoreMethod.AbstractGetUncleMethod);\n\n    var GetBlockTransactionCountMethod =\n    function (_AbstractGetBlockTran) {\n      _inherits(GetBlockTransactionCountMethod, _AbstractGetBlockTran);\n      function GetBlockTransactionCountMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockTransactionCountMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockTransactionCountMethod).call(this, 'eth_getBlockTransactionCountByNumber', utils, formatters, moduleInstance));\n      }\n      _createClass(GetBlockTransactionCountMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getBlockTransactionCountByHash';\n          }\n          _get(_getPrototypeOf(GetBlockTransactionCountMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetBlockTransactionCountMethod;\n    }(web3CoreMethod.AbstractGetBlockTransactionCountMethod);\n\n    var GetBlockUncleCountMethod =\n    function (_AbstractGetBlockUncl) {\n      _inherits(GetBlockUncleCountMethod, _AbstractGetBlockUncl);\n      function GetBlockUncleCountMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockUncleCountMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockUncleCountMethod).call(this, 'eth_getUncleCountByBlockNumber', utils, formatters, moduleInstance));\n      }\n      _createClass(GetBlockUncleCountMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getUncleCountByBlockHash';\n          }\n          _get(_getPrototypeOf(GetBlockUncleCountMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetBlockUncleCountMethod;\n    }(web3CoreMethod.AbstractGetBlockUncleCountMethod);\n\n    var GetTransactionFromBlockMethod =\n    function (_AbstractGetTransacti) {\n      _inherits(GetTransactionFromBlockMethod, _AbstractGetTransacti);\n      function GetTransactionFromBlockMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetTransactionFromBlockMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionFromBlockMethod).call(this, 'eth_getTransactionByBlockNumberAndIndex', utils, formatters, moduleInstance));\n      }\n      _createClass(GetTransactionFromBlockMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getTransactionByBlockHashAndIndex';\n          }\n          _get(_getPrototypeOf(GetTransactionFromBlockMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetTransactionFromBlockMethod;\n    }(web3CoreMethod.AbstractGetTransactionFromBlockMethod);\n\n    var EthSignTransactionMethod =\n    function (_SignTransactionMetho) {\n      _inherits(EthSignTransactionMethod, _SignTransactionMetho);\n      function EthSignTransactionMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, EthSignTransactionMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(EthSignTransactionMethod).call(this, utils, formatters, moduleInstance));\n      }\n      _createClass(EthSignTransactionMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputTransactionFormatter(this.parameters[0], moduleInstance);\n        }\n      }, {\n        key: \"execute\",\n        value: function execute() {\n          if (isString(this.parameters[1])) {\n            var account = this.moduleInstance.accounts.wallet[this.parameters[1]];\n            if (account) {\n              return this.moduleInstance.transactionSigner.sign(this.parameters[0], account.privateKey);\n            }\n          }\n          return _get(_getPrototypeOf(EthSignTransactionMethod.prototype), \"execute\", this).call(this);\n        }\n      }]);\n      return EthSignTransactionMethod;\n    }(web3CoreMethod.SignTransactionMethod);\n\n    var EthSignMethod =\n    function (_SignMethod) {\n      _inherits(EthSignMethod, _SignMethod);\n      function EthSignMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, EthSignMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(EthSignMethod).call(this, utils, formatters, moduleInstance));\n      }\n      _createClass(EthSignMethod, [{\n        key: \"execute\",\n        value: function execute() {\n          if (this.moduleInstance.accounts.wallet[this.parameters[1]]) {\n            return this.signLocally();\n          }\n          return _get(_getPrototypeOf(EthSignMethod.prototype), \"execute\", this).call(this);\n        }\n      }, {\n        key: \"signLocally\",\n        value: function () {\n          var _signLocally = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee() {\n            var signedMessage;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    this.beforeExecution(this.moduleInstance);\n                    signedMessage = this.moduleInstance.accounts.sign(this.parameters[1], this.moduleInstance.accounts.wallet[this.parameters[0]].privateKey);\n                    if (!this.callback) {\n                      _context.next = 6;\n                      break;\n                    }\n                    this.callback(false, signedMessage);\n                    return _context.abrupt(\"return\");\n                  case 6:\n                    return _context.abrupt(\"return\", signedMessage);\n                  case 9:\n                    _context.prev = 9;\n                    _context.t0 = _context[\"catch\"](0);\n                    if (!this.callback) {\n                      _context.next = 14;\n                      break;\n                    }\n                    this.callback(_context.t0, null);\n                    return _context.abrupt(\"return\");\n                  case 14:\n                    throw _context.t0;\n                  case 15:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this, [[0, 9]]);\n          }));\n          function signLocally() {\n            return _signLocally.apply(this, arguments);\n          }\n          return signLocally;\n        }()\n      }]);\n      return EthSignMethod;\n    }(web3CoreMethod.SignMethod);\n\n    var EthGetAccountsMethod =\n    function (_GetAccountsMethod) {\n      _inherits(EthGetAccountsMethod, _GetAccountsMethod);\n      function EthGetAccountsMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, EthGetAccountsMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(EthGetAccountsMethod).call(this, utils, formatters, moduleInstance));\n      }\n      _createClass(EthGetAccountsMethod, [{\n        key: \"execute\",\n        value: function execute() {\n          if (this.moduleInstance.accounts.wallet.accountsIndex) {\n            var accounts = [];\n            for (var i = 0; i < this.moduleInstance.accounts.wallet.accountsIndex; i++) {\n              accounts.push(this.moduleInstance.accounts.wallet[i].address);\n            }\n            return Promise.resolve(accounts);\n          }\n          return _get(_getPrototypeOf(EthGetAccountsMethod.prototype), \"execute\", this).call(this);\n        }\n      }]);\n      return EthGetAccountsMethod;\n    }(web3CoreMethod.GetAccountsMethod);\n\n    var MethodFactory =\n    function (_AbstractMethodFactor) {\n      _inherits(MethodFactory, _AbstractMethodFactor);\n      function MethodFactory(utils, formatters) {\n        var _this;\n        _classCallCheck(this, MethodFactory);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(MethodFactory).call(this, utils, formatters));\n        _this.methods = {\n          getNodeInfo: web3CoreMethod.GetNodeInfoMethod,\n          getProtocolVersion: web3CoreMethod.GetProtocolVersionMethod,\n          getCoinbase: web3CoreMethod.GetCoinbaseMethod,\n          isMining: web3CoreMethod.IsMiningMethod,\n          getHashrate: web3CoreMethod.GetHashrateMethod,\n          isSyncing: web3CoreMethod.IsSyncingMethod,\n          getGasPrice: web3CoreMethod.GetGasPriceMethod,\n          getAccounts: EthGetAccountsMethod,\n          getBlockNumber: web3CoreMethod.GetBlockNumberMethod,\n          getBalance: web3CoreMethod.GetBalanceMethod,\n          getStorageAt: web3CoreMethod.GetStorageAtMethod,\n          getCode: web3CoreMethod.GetCodeMethod,\n          getBlock: GetBlockMethod,\n          getUncle: GetUncleMethod,\n          getBlockTransactionCount: GetBlockTransactionCountMethod,\n          getBlockUncleCount: GetBlockUncleCountMethod,\n          getTransaction: web3CoreMethod.GetTransactionMethod,\n          getPendingTransactions: web3CoreMethod.GetPendingTransactionsMethod,\n          getTransactionFromBlock: GetTransactionFromBlockMethod,\n          getTransactionReceipt: web3CoreMethod.GetTransactionReceiptMethod,\n          getTransactionCount: web3CoreMethod.GetTransactionCountMethod,\n          sendSignedTransaction: web3CoreMethod.SendRawTransactionMethod,\n          signTransaction: EthSignTransactionMethod,\n          sendTransaction: web3CoreMethod.EthSendTransactionMethod,\n          sign: EthSignMethod,\n          call: web3CoreMethod.CallMethod,\n          estimateGas: web3CoreMethod.EstimateGasMethod,\n          submitWork: web3CoreMethod.SubmitWorkMethod,\n          getWork: web3CoreMethod.GetWorkMethod,\n          getPastLogs: web3CoreMethod.GetPastLogsMethod,\n          requestAccounts: web3CoreMethod.RequestAccountsMethod,\n          getId: web3CoreMethod.VersionMethod,\n          getChainId: web3CoreMethod.ChainIdMethod,\n          getProof: web3CoreMethod.GetProofMethod\n        };\n        return _this;\n      }\n      return MethodFactory;\n    }(web3CoreMethod.AbstractMethodFactory);\n\n    var SubscriptionsFactory =\n    function () {\n      function SubscriptionsFactory(utils, formatters) {\n        _classCallCheck(this, SubscriptionsFactory);\n        this.utils = utils;\n        this.formatters = formatters;\n      }\n      _createClass(SubscriptionsFactory, [{\n        key: \"getSubscription\",\n        value: function getSubscription(moduleInstance, type, options) {\n          switch (type) {\n            case 'logs':\n              return new web3CoreSubscriptions.LogSubscription(options, this.utils, this.formatters, moduleInstance, new web3CoreMethod.GetPastLogsMethod(this.utils, this.formatters, moduleInstance));\n            case 'newBlockHeaders':\n              return new web3CoreSubscriptions.NewHeadsSubscription(this.utils, this.formatters, moduleInstance);\n            case 'pendingTransactions':\n              return new web3CoreSubscriptions.NewPendingTransactionsSubscription(this.utils, this.formatters, moduleInstance);\n            case 'syncing':\n              return new web3CoreSubscriptions.SyncingSubscription(this.utils, this.formatters, moduleInstance);\n            default:\n              throw new Error(\"Unknown subscription: \".concat(type));\n          }\n        }\n      }]);\n      return SubscriptionsFactory;\n    }();\n\n    var Eth =\n    function (_AbstractWeb3Module) {\n      _inherits(Eth, _AbstractWeb3Module);\n      function Eth(provider, methodFactory, net, accounts, personal, Iban, abiCoder, ens, utils, formatters, subscriptionsFactory, contractModuleFactory, options, nodeNet) {\n        var _this;\n        _classCallCheck(this, Eth);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Eth).call(this, provider, options, methodFactory, nodeNet));\n        _this.net = net;\n        _this.accounts = accounts;\n        _this.personal = personal;\n        _this.Iban = Iban;\n        _this.abi = abiCoder;\n        _this.ens = ens;\n        _this.utils = utils;\n        _this.formatters = formatters;\n        _this.subscriptionsFactory = subscriptionsFactory;\n        _this.contractModuleFactory = contractModuleFactory;\n        _this.initiatedContracts = [];\n        _this._transactionSigner = options.transactionSigner;\n        _this.Contract = function (abi, address) {\n          var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n          var contract = _this.contractModuleFactory.createContract(_this.currentProvider, _this.accounts, abi, address, {\n            defaultAccount: options.from || options.defaultAccount || _this.defaultAccount,\n            defaultBlock: options.defaultBlock || _this.defaultBlock,\n            defaultGas: options.gas || options.defaultGas || _this.defaultGas,\n            defaultGasPrice: options.gasPrice || options.defaultGasPrice || _this.defaultGasPrice,\n            transactionBlockTimeout: options.transactionBlockTimeout || _this.transactionBlockTimeout,\n            transactionConfirmationBlocks: options.transactionConfirmationBlocks || _this.transactionConfirmationBlocks,\n            transactionPollingTimeout: options.transactionPollingTimeout || _this.transactionPollingTimeout,\n            transactionSigner: _this.transactionSigner,\n            data: options.data\n          });\n          _this.initiatedContracts.push(contract);\n          return contract;\n        };\n        return _this;\n      }\n      _createClass(Eth, [{\n        key: \"clearSubscriptions\",\n        value: function clearSubscriptions() {\n          return _get(_getPrototypeOf(Eth.prototype), \"clearSubscriptions\", this).call(this, 'eth_unsubscribe');\n        }\n      }, {\n        key: \"subscribe\",\n        value: function subscribe(type, options, callback) {\n          return this.subscriptionsFactory.getSubscription(this, type, options).subscribe(callback);\n        }\n      }, {\n        key: \"setProvider\",\n        value: function setProvider(provider, net) {\n          var setContractProviders = this.initiatedContracts.every(function (contract) {\n            return contract.setProvider(provider, net);\n          });\n          return this.net.setProvider(provider, net) && this.personal.setProvider(provider, net) && _get(_getPrototypeOf(Eth.prototype), \"setProvider\", this).call(this, provider, net) && setContractProviders;\n        }\n      }, {\n        key: \"transactionSigner\",\n        get: function get() {\n          return this._transactionSigner;\n        }\n        ,\n        set: function set(transactionSigner) {\n          if (transactionSigner.type && transactionSigner.type === 'TransactionSigner') {\n            throw new Error('Invalid TransactionSigner given!');\n          }\n          this._transactionSigner = transactionSigner;\n          this.accounts.transactionSigner = transactionSigner;\n          this.ens.transactionSigner = transactionSigner;\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionSigner = transactionSigner;\n          });\n        }\n      }, {\n        key: \"defaultGasPrice\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultGasPrice = value;\n          });\n          this.net.defaultGasPrice = value;\n          this.personal.defaultGasPrice = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultGasPrice\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultGasPrice\", this);\n        }\n      }, {\n        key: \"defaultGas\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultGas = value;\n          });\n          this.net.defaultGas = value;\n          this.personal.defaultGas = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultGas\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultGas\", this);\n        }\n      }, {\n        key: \"transactionBlockTimeout\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionBlockTimeout = value;\n          });\n          this.net.transactionBlockTimeout = value;\n          this.personal.transactionBlockTimeout = value;\n          _set(_getPrototypeOf(Eth.prototype), \"transactionBlockTimeout\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"transactionBlockTimeout\", this);\n        }\n      }, {\n        key: \"transactionConfirmationBlocks\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionConfirmationBlocks = value;\n          });\n          this.net.transactionConfirmationBlocks = value;\n          this.personal.transactionConfirmationBlocks = value;\n          _set(_getPrototypeOf(Eth.prototype), \"transactionConfirmationBlocks\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"transactionConfirmationBlocks\", this);\n        }\n      }, {\n        key: \"transactionPollingTimeout\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionPollingTimeout = value;\n          });\n          this.net.transactionPollingTimeout = value;\n          this.personal.transactionPollingTimeout = value;\n          _set(_getPrototypeOf(Eth.prototype), \"transactionPollingTimeout\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"transactionPollingTimeout\", this);\n        }\n      }, {\n        key: \"defaultAccount\",\n        set: function set(value) {\n          var _this2 = this;\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultAccount = _this2.utils.toChecksumAddress(value);\n          });\n          this.net.defaultAccount = value;\n          this.personal.defaultAccount = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultAccount\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultAccount\", this);\n        }\n      }, {\n        key: \"defaultBlock\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultBlock = value;\n          });\n          this.net.defaultBlock = value;\n          this.personal.defaultBlock = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultBlock\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultBlock\", this);\n        }\n      }]);\n      return Eth;\n    }(web3Core.AbstractWeb3Module);\n\n    function TransactionSigner$1() {\n      return new TransactionSigner(Utils, web3CoreHelpers.formatters);\n    }\n    function Eth$1(provider) {\n      var net = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (!options.transactionSigner || options.transactionSigner.type === 'TransactionSigner') {\n        options.transactionSigner = new TransactionSigner$1();\n      }\n      var resolvedProvider = new web3Providers.ProviderResolver().resolve(provider, net);\n      var accounts = new web3EthAccounts.Accounts(resolvedProvider, null, options);\n      var abiCoder = new web3EthAbi.AbiCoder();\n      return new Eth(resolvedProvider, new MethodFactory(Utils, web3CoreHelpers.formatters), new web3Net.Network(resolvedProvider, null, options), accounts, new web3EthPersonal.Personal(resolvedProvider, null, accounts, options), web3EthIban.Iban, abiCoder, new web3EthEns.Ens(resolvedProvider, null, accounts, options), Utils, web3CoreHelpers.formatters, new SubscriptionsFactory(Utils, web3CoreHelpers.formatters), new web3EthContract.ContractModuleFactory(Utils, web3CoreHelpers.formatters, abiCoder, accounts), options, net);\n    }\n\n    exports.Eth = Eth$1;\n    exports.TransactionSigner = TransactionSigner$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"},"lineCount":568}},"error":null,"hash":"62be959dd57552d8ced94459c41bbca9","cacheData":{"env":{}}}