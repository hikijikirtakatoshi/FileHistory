{"id":"../node_modules/web3-eth-abi/src/types/address.js","dependencies":[{"name":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/package.json","includedInParent":true,"mtime":1560441115902},{"name":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-abi/package.json","includedInParent":true,"mtime":1560478573917},{"name":"../formatters","loc":{"line":1,"column":16},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-abi/src/types/address.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-abi/src/formatters.js"},{"name":"web3-core-helpers","loc":{"line":2,"column":25},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-abi/src/types/address.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-core-helpers/src/index.js"},{"name":"../type","loc":{"line":3,"column":27},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-abi/src/types/address.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-abi/src/type.js"}],"generated":{"js":"var f = require('../formatters');\nvar formatters = require('web3-core-helpers').formatters;\nvar SolidityType = require('../type');\n\n/**\n * SolidityTypeAddress is a protoype that represents address type\n * It matches:\n * address\n * address[]\n * address[4]\n * address[][]\n * address[3][]\n * address[][6][], ...\n */\nvar SolidityTypeAddress = function () {\n    this._inputFormatter = function(){\n        var args = Array.prototype.slice.call(arguments);\n        args[0] = (!args[0] || args[0] === '0x0') ? '' : formatters.inputAddressFormatter(args[0]);\n        return f.formatInputInt.apply(this, args);\n    };\n    this._outputFormatter = f.formatOutputAddress;\n};\n\nSolidityTypeAddress.prototype = new SolidityType({});\nSolidityTypeAddress.prototype.constructor = SolidityTypeAddress;\n\nSolidityTypeAddress.prototype.isType = function (name) {\n    return !!name.match(/address(\\[([0-9]*)\\])?/);\n};\n\nmodule.exports = SolidityTypeAddress;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/web3-eth-abi/src/types/address.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}}],"sources":{"../node_modules/web3-eth-abi/src/types/address.js":"var f = require('../formatters');\nvar formatters = require('web3-core-helpers').formatters;\nvar SolidityType = require('../type');\n\n/**\n * SolidityTypeAddress is a protoype that represents address type\n * It matches:\n * address\n * address[]\n * address[4]\n * address[][]\n * address[3][]\n * address[][6][], ...\n */\nvar SolidityTypeAddress = function () {\n    this._inputFormatter = function(){\n        var args = Array.prototype.slice.call(arguments);\n        args[0] = (!args[0] || args[0] === '0x0') ? '' : formatters.inputAddressFormatter(args[0]);\n        return f.formatInputInt.apply(this, args);\n    };\n    this._outputFormatter = f.formatOutputAddress;\n};\n\nSolidityTypeAddress.prototype = new SolidityType({});\nSolidityTypeAddress.prototype.constructor = SolidityTypeAddress;\n\nSolidityTypeAddress.prototype.isType = function (name) {\n    return !!name.match(/address(\\[([0-9]*)\\])?/);\n};\n\nmodule.exports = SolidityTypeAddress;\n"},"lineCount":32}},"error":null,"hash":"9def11226fce556ba908b47b5722f4fd","cacheData":{"env":{}}}