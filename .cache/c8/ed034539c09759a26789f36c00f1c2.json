{"id":"../node_modules/web3-eth-abi/src/formatters.js","dependencies":[{"name":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/package.json","includedInParent":true,"mtime":1560441115902},{"name":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-abi/package.json","includedInParent":true,"mtime":1560478573917},{"name":"underscore","loc":{"line":24,"column":16},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-abi/src/formatters.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/underscore/underscore.js"},{"name":"web3-utils","loc":{"line":25,"column":20},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-abi/src/formatters.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-utils/src/index.js"},{"name":"bn.js","loc":{"line":26,"column":17},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-abi/src/formatters.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-abi/node_modules/bn.js/lib/bn.js"},{"name":"./param","loc":{"line":27,"column":28},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-abi/src/formatters.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-eth-abi/src/param.js"}],"generated":{"js":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file formatters.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@frozeman.de>\n * @date 2017\n */\n\nvar _ = require('underscore');\nvar utils = require('web3-utils');\nvar BN = require('bn.js');\nvar SolidityParam = require('./param');\n\n\n\n/**\n * Formats input value to byte representation of int\n * If value is negative, return it's two's complement\n * If the value is floating point, round it down\n *\n * @method formatInputInt\n * @param {String|Number|BN} value that needs to be formatted\n * @returns {SolidityParam}\n */\nvar formatInputInt = function (value) {\n    if(_.isNumber(value)) {\n        value = Math.trunc(value);\n    }\n    return new SolidityParam(utils.toTwosComplement(value).replace('0x',''));\n};\n\n/**\n * Formats input bytes\n *\n * @method formatInputBytes\n * @param {String} value\n * @returns {SolidityParam}\n */\nvar formatInputBytes = function (value) {\n    if(!utils.isHexStrict(value)) {\n        throw new Error('Given parameter is not bytes: \"'+ value + '\"');\n    }\n\n    var result = value.replace(/^0x/i,'');\n\n    if(result.length % 2 !== 0) {\n        throw new Error('Given parameter bytes has an invalid length: \"'+ value + '\"');\n    }\n\n    if (result.length > 64) {\n        throw new Error('Given parameter bytes is too long: \"' + value + '\"');\n    }\n\n    var l = Math.floor((result.length + 63) / 64);\n    result = utils.padRight(result, l * 64);\n    return new SolidityParam(result);\n};\n\n/**\n * Formats input bytes\n *\n * @method formatDynamicInputBytes\n * @param {String} value\n * @returns {SolidityParam}\n */\nvar formatInputDynamicBytes = function (value) {\n    if(!utils.isHexStrict(value)) {\n        throw new Error('Given parameter is not bytes: \"'+ value + '\"');\n    }\n\n    var result = value.replace(/^0x/i,'');\n\n    if(result.length % 2 !== 0) {\n        throw new Error('Given parameter bytes has an invalid length: \"'+ value + '\"');\n    }\n\n    var length = result.length / 2;\n    var l = Math.floor((result.length + 63) / 64);\n    result = utils.padRight(result, l * 64);\n    return new SolidityParam(formatInputInt(length).value + result);\n};\n\n/**\n * Formats input value to byte representation of string\n *\n * @method formatInputString\n * @param {String}\n * @returns {SolidityParam}\n */\nvar formatInputString = function (value) {\n    if(!_.isString(value)) {\n        throw new Error('Given parameter is not a valid string: ' + value);\n    }\n\n    var result = utils.utf8ToHex(value).replace(/^0x/i,'');\n    var length = result.length / 2;\n    var l = Math.floor((result.length + 63) / 64);\n    result = utils.padRight(result, l * 64);\n    return new SolidityParam(formatInputInt(length).value + result);\n};\n\n/**\n * Formats input value to byte representation of bool\n *\n * @method formatInputBool\n * @param {Boolean}\n * @returns {SolidityParam}\n */\nvar formatInputBool = function (value) {\n    var result = '000000000000000000000000000000000000000000000000000000000000000' + (value ?  '1' : '0');\n    return new SolidityParam(result);\n};\n\n\n/**\n * Check if input value is negative\n *\n * @method signedIsNegative\n * @param {String} value is hex format\n * @returns {Boolean} true if it is negative, otherwise false\n */\nvar signedIsNegative = function (value) {\n    return (new BN(value.substr(0, 1), 16).toString(2).substr(0, 1)) === '1';\n};\n\n/**\n * Formats right-aligned output bytes to int\n *\n * @method formatOutputInt\n * @param {SolidityParam} param\n * @returns {BN} right-aligned output bytes formatted to big number\n */\nvar formatOutputInt = function (param) {\n    var value = param.staticPart();\n\n    if(!value && !param.rawValue) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue);\n    }\n\n    // check if it's negative number\n    // it it is, return two's complement\n    if (signedIsNegative(value)) {\n        return new BN(value, 16).fromTwos(256).toString(10);\n    }\n    return new BN(value, 16).toString(10);\n};\n\n/**\n * Formats right-aligned output bytes to uint\n *\n * @method formatOutputUInt\n * @param {SolidityParam} param\n * @returns {BN} right-aligned output bytes formatted to uint\n */\nvar formatOutputUInt = function (param, name) {\n    var value = param.staticPart();\n\n    if(!value && !param.rawValue) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue);\n    }\n\n    return new BN(value, 16).toString(10);\n};\n\n\n\n/**\n * Should be used to format output bool\n *\n * @method formatOutputBool\n * @param {SolidityParam} param\n * @param {String} name type name\n * @returns {Boolean} right-aligned input bytes formatted to bool\n */\nvar formatOutputBool = function (param, name) {\n    var value = param.staticPart();\n\n    if(!value && !param.rawValue) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue);\n    }\n\n    return (value === '0000000000000000000000000000000000000000000000000000000000000001');\n};\n\n/**\n * Should be used to format output bytes\n *\n * @method formatOutputBytes\n * @param {SolidityParam} param left-aligned hex representation of string\n * @param {String} name type name\n * @returns {String} hex string\n */\nvar formatOutputBytes = function (param, name) {\n    var matches = name.match(/^bytes([0-9]*)/);\n    var size = parseInt(matches[1]);\n\n    if(param.staticPart().slice(0, 2 * size).length !== size * 2) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue + ' The size doesn\\'t match.');\n    }\n\n    return '0x' + param.staticPart().slice(0, 2 * size);\n};\n\n/**\n * Should be used to format output bytes\n *\n * @method formatOutputDynamicBytes\n * @param {SolidityParam} param left-aligned hex representation of string\n * @param {String} name type name\n * @returns {String} hex string\n */\nvar formatOutputDynamicBytes = function (param, name) {\n    var hex = param.dynamicPart().slice(0, 64);\n\n    if (!hex) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue);\n    }\n\n    var length = (new BN(hex, 16)).toNumber() * 2;\n    return '0x' + param.dynamicPart().substr(64, length);\n};\n\n/**\n * Should be used to format output string\n *\n * @method formatOutputString\n * @param {SolidityParam} left-aligned hex representation of string\n * @returns {String} ascii string\n */\nvar formatOutputString = function (param) {\n    var hex = param.dynamicPart().slice(0, 64);\n\n    if(!hex) {\n        throw new Error('ERROR: The returned value is not a convertible string:'+ hex);\n    }\n\n    var length = (new BN(hex, 16)).toNumber() * 2;\n    return length ? utils.hexToUtf8('0x'+ param.dynamicPart().substr(64, length).replace(/^0x/i, '')) : '';\n};\n\n/**\n * Should be used to format output address\n *\n * @method formatOutputAddress\n * @param {SolidityParam} param right-aligned input bytes\n * @param {String} name type name\n * @returns {String} address\n */\nvar formatOutputAddress = function (param, name) {\n    var value = param.staticPart();\n\n    if (!value) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue);\n    }\n\n    return utils.toChecksumAddress(\"0x\" + value.slice(value.length - 40, value.length));\n};\n\nmodule.exports = {\n    formatInputInt: formatInputInt,\n    formatInputBytes: formatInputBytes,\n    formatInputDynamicBytes: formatInputDynamicBytes,\n    formatInputString: formatInputString,\n    formatInputBool: formatInputBool,\n    formatOutputInt: formatOutputInt,\n    formatOutputUInt: formatOutputUInt,\n    formatOutputBool: formatOutputBool,\n    formatOutputBytes: formatOutputBytes,\n    formatOutputDynamicBytes: formatOutputDynamicBytes,\n    formatOutputString: formatOutputString,\n    formatOutputAddress: formatOutputAddress,\n    toTwosComplement: utils.toTwosComplement\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/web3-eth-abi/src/formatters.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}}],"sources":{"../node_modules/web3-eth-abi/src/formatters.js":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file formatters.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@frozeman.de>\n * @date 2017\n */\n\nvar _ = require('underscore');\nvar utils = require('web3-utils');\nvar BN = require('bn.js');\nvar SolidityParam = require('./param');\n\n\n\n/**\n * Formats input value to byte representation of int\n * If value is negative, return it's two's complement\n * If the value is floating point, round it down\n *\n * @method formatInputInt\n * @param {String|Number|BN} value that needs to be formatted\n * @returns {SolidityParam}\n */\nvar formatInputInt = function (value) {\n    if(_.isNumber(value)) {\n        value = Math.trunc(value);\n    }\n    return new SolidityParam(utils.toTwosComplement(value).replace('0x',''));\n};\n\n/**\n * Formats input bytes\n *\n * @method formatInputBytes\n * @param {String} value\n * @returns {SolidityParam}\n */\nvar formatInputBytes = function (value) {\n    if(!utils.isHexStrict(value)) {\n        throw new Error('Given parameter is not bytes: \"'+ value + '\"');\n    }\n\n    var result = value.replace(/^0x/i,'');\n\n    if(result.length % 2 !== 0) {\n        throw new Error('Given parameter bytes has an invalid length: \"'+ value + '\"');\n    }\n\n    if (result.length > 64) {\n        throw new Error('Given parameter bytes is too long: \"' + value + '\"');\n    }\n\n    var l = Math.floor((result.length + 63) / 64);\n    result = utils.padRight(result, l * 64);\n    return new SolidityParam(result);\n};\n\n/**\n * Formats input bytes\n *\n * @method formatDynamicInputBytes\n * @param {String} value\n * @returns {SolidityParam}\n */\nvar formatInputDynamicBytes = function (value) {\n    if(!utils.isHexStrict(value)) {\n        throw new Error('Given parameter is not bytes: \"'+ value + '\"');\n    }\n\n    var result = value.replace(/^0x/i,'');\n\n    if(result.length % 2 !== 0) {\n        throw new Error('Given parameter bytes has an invalid length: \"'+ value + '\"');\n    }\n\n    var length = result.length / 2;\n    var l = Math.floor((result.length + 63) / 64);\n    result = utils.padRight(result, l * 64);\n    return new SolidityParam(formatInputInt(length).value + result);\n};\n\n/**\n * Formats input value to byte representation of string\n *\n * @method formatInputString\n * @param {String}\n * @returns {SolidityParam}\n */\nvar formatInputString = function (value) {\n    if(!_.isString(value)) {\n        throw new Error('Given parameter is not a valid string: ' + value);\n    }\n\n    var result = utils.utf8ToHex(value).replace(/^0x/i,'');\n    var length = result.length / 2;\n    var l = Math.floor((result.length + 63) / 64);\n    result = utils.padRight(result, l * 64);\n    return new SolidityParam(formatInputInt(length).value + result);\n};\n\n/**\n * Formats input value to byte representation of bool\n *\n * @method formatInputBool\n * @param {Boolean}\n * @returns {SolidityParam}\n */\nvar formatInputBool = function (value) {\n    var result = '000000000000000000000000000000000000000000000000000000000000000' + (value ?  '1' : '0');\n    return new SolidityParam(result);\n};\n\n\n/**\n * Check if input value is negative\n *\n * @method signedIsNegative\n * @param {String} value is hex format\n * @returns {Boolean} true if it is negative, otherwise false\n */\nvar signedIsNegative = function (value) {\n    return (new BN(value.substr(0, 1), 16).toString(2).substr(0, 1)) === '1';\n};\n\n/**\n * Formats right-aligned output bytes to int\n *\n * @method formatOutputInt\n * @param {SolidityParam} param\n * @returns {BN} right-aligned output bytes formatted to big number\n */\nvar formatOutputInt = function (param) {\n    var value = param.staticPart();\n\n    if(!value && !param.rawValue) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue);\n    }\n\n    // check if it's negative number\n    // it it is, return two's complement\n    if (signedIsNegative(value)) {\n        return new BN(value, 16).fromTwos(256).toString(10);\n    }\n    return new BN(value, 16).toString(10);\n};\n\n/**\n * Formats right-aligned output bytes to uint\n *\n * @method formatOutputUInt\n * @param {SolidityParam} param\n * @returns {BN} right-aligned output bytes formatted to uint\n */\nvar formatOutputUInt = function (param, name) {\n    var value = param.staticPart();\n\n    if(!value && !param.rawValue) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue);\n    }\n\n    return new BN(value, 16).toString(10);\n};\n\n\n\n/**\n * Should be used to format output bool\n *\n * @method formatOutputBool\n * @param {SolidityParam} param\n * @param {String} name type name\n * @returns {Boolean} right-aligned input bytes formatted to bool\n */\nvar formatOutputBool = function (param, name) {\n    var value = param.staticPart();\n\n    if(!value && !param.rawValue) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue);\n    }\n\n    return (value === '0000000000000000000000000000000000000000000000000000000000000001');\n};\n\n/**\n * Should be used to format output bytes\n *\n * @method formatOutputBytes\n * @param {SolidityParam} param left-aligned hex representation of string\n * @param {String} name type name\n * @returns {String} hex string\n */\nvar formatOutputBytes = function (param, name) {\n    var matches = name.match(/^bytes([0-9]*)/);\n    var size = parseInt(matches[1]);\n\n    if(param.staticPart().slice(0, 2 * size).length !== size * 2) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue + ' The size doesn\\'t match.');\n    }\n\n    return '0x' + param.staticPart().slice(0, 2 * size);\n};\n\n/**\n * Should be used to format output bytes\n *\n * @method formatOutputDynamicBytes\n * @param {SolidityParam} param left-aligned hex representation of string\n * @param {String} name type name\n * @returns {String} hex string\n */\nvar formatOutputDynamicBytes = function (param, name) {\n    var hex = param.dynamicPart().slice(0, 64);\n\n    if (!hex) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue);\n    }\n\n    var length = (new BN(hex, 16)).toNumber() * 2;\n    return '0x' + param.dynamicPart().substr(64, length);\n};\n\n/**\n * Should be used to format output string\n *\n * @method formatOutputString\n * @param {SolidityParam} left-aligned hex representation of string\n * @returns {String} ascii string\n */\nvar formatOutputString = function (param) {\n    var hex = param.dynamicPart().slice(0, 64);\n\n    if(!hex) {\n        throw new Error('ERROR: The returned value is not a convertible string:'+ hex);\n    }\n\n    var length = (new BN(hex, 16)).toNumber() * 2;\n    return length ? utils.hexToUtf8('0x'+ param.dynamicPart().substr(64, length).replace(/^0x/i, '')) : '';\n};\n\n/**\n * Should be used to format output address\n *\n * @method formatOutputAddress\n * @param {SolidityParam} param right-aligned input bytes\n * @param {String} name type name\n * @returns {String} address\n */\nvar formatOutputAddress = function (param, name) {\n    var value = param.staticPart();\n\n    if (!value) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue);\n    }\n\n    return utils.toChecksumAddress(\"0x\" + value.slice(value.length - 40, value.length));\n};\n\nmodule.exports = {\n    formatInputInt: formatInputInt,\n    formatInputBytes: formatInputBytes,\n    formatInputDynamicBytes: formatInputDynamicBytes,\n    formatInputString: formatInputString,\n    formatInputBool: formatInputBool,\n    formatOutputInt: formatOutputInt,\n    formatOutputUInt: formatOutputUInt,\n    formatOutputBool: formatOutputBool,\n    formatOutputBytes: formatOutputBytes,\n    formatOutputDynamicBytes: formatOutputDynamicBytes,\n    formatOutputString: formatOutputString,\n    formatOutputAddress: formatOutputAddress,\n    toTwosComplement: utils.toTwosComplement\n};\n"},"lineCount":289}},"error":null,"hash":"0f0ee13794e4f635355996af60fbe002","cacheData":{"env":{}}}