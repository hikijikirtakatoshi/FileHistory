{"id":"../node_modules/web3-providers/dist/web3-providers.umd.js","dependencies":[{"name":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/package.json","includedInParent":true,"mtime":1560244257178},{"name":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/package.json","includedInParent":true,"mtime":1560416584037},{"name":"@babel/runtime/helpers/classCallCheck","loc":{"line":2,"column":92},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/classCallCheck.js"},{"name":"@babel/runtime/helpers/createClass","loc":{"line":2,"column":142},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/createClass.js"},{"name":"websocket","loc":{"line":2,"column":189},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/websocket/lib/browser.js"},{"name":"xhr2-cookies","loc":{"line":2,"column":211},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/xhr2-cookies/dist/index.js"},{"name":"url-parse","loc":{"line":2,"column":236},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/url-parse/index.js"},{"name":"@babel/runtime/helpers/typeof","loc":{"line":2,"column":258},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/typeof.js"},{"name":"lodash/isFunction","loc":{"line":2,"column":300},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/lodash/isFunction.js"},{"name":"lodash/isObject","loc":{"line":2,"column":330},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/lodash/isObject.js"},{"name":"@babel/runtime/helpers/possibleConstructorReturn","loc":{"line":2,"column":358},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"},{"name":"@babel/runtime/helpers/getPrototypeOf","loc":{"line":2,"column":419},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/getPrototypeOf.js"},{"name":"@babel/runtime/helpers/get","loc":{"line":2,"column":469},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/get.js"},{"name":"@babel/runtime/helpers/inherits","loc":{"line":2,"column":508},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/inherits.js"},{"name":"@babel/runtime/regenerator","loc":{"line":2,"column":552},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/regenerator/index.js"},{"name":"@babel/runtime/helpers/asyncToGenerator","loc":{"line":2,"column":591},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/@babel/runtime/helpers/asyncToGenerator.js"},{"name":"eventemitter3","loc":{"line":2,"column":643},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/eventemitter3/index.js"},{"name":"lodash/isArray","loc":{"line":2,"column":669},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/lodash/isArray.js"},{"name":"http","loc":{"line":2,"column":696},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/stream-http/index.js"},{"name":"https","loc":{"line":2,"column":713},"parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/https-browserify/index.js"},{"name":"process","parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/process/browser.js"},{"name":"buffer","parent":"/Users/hikishiritakatoshi/CryptoEconomics/Ethereum/Contract/filehistory/node_modules/web3-providers/dist/web3-providers.umd.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var define;\nvar global = arguments[3];\nvar process = require(\"process\");\nvar Buffer = require(\"buffer\").Buffer;\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass'), require('websocket'), require('xhr2-cookies'), require('url-parse'), require('@babel/runtime/helpers/typeof'), require('lodash/isFunction'), require('lodash/isObject'), require('@babel/runtime/helpers/possibleConstructorReturn'), require('@babel/runtime/helpers/getPrototypeOf'), require('@babel/runtime/helpers/get'), require('@babel/runtime/helpers/inherits'), require('@babel/runtime/regenerator'), require('@babel/runtime/helpers/asyncToGenerator'), require('eventemitter3'), require('lodash/isArray'), require('http'), require('https')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass', 'websocket', 'xhr2-cookies', 'url-parse', '@babel/runtime/helpers/typeof', 'lodash/isFunction', 'lodash/isObject', '@babel/runtime/helpers/possibleConstructorReturn', '@babel/runtime/helpers/getPrototypeOf', '@babel/runtime/helpers/get', '@babel/runtime/helpers/inherits', '@babel/runtime/regenerator', '@babel/runtime/helpers/asyncToGenerator', 'eventemitter3', 'lodash/isArray', 'http', 'https'], factory) :\n    (global = global || self, factory(global.Web3Providers = {}, global._classCallCheck, global._createClass, global.websocket, global.xhr2Cookies, global.URL, global._typeof, global.isFunction, global.isObject, global._possibleConstructorReturn, global._getPrototypeOf, global._get, global._inherits, global._regeneratorRuntime, global._asyncToGenerator, global.EventEmitter, global.isArray, global.http, global.https));\n}(this, function (exports, _classCallCheck, _createClass, websocket, xhr2Cookies, URL, _typeof, isFunction, isObject, _possibleConstructorReturn, _getPrototypeOf, _get, _inherits, _regeneratorRuntime, _asyncToGenerator, EventEmitter, isArray, http, https) { 'use strict';\n\n    _classCallCheck = _classCallCheck && _classCallCheck.hasOwnProperty('default') ? _classCallCheck['default'] : _classCallCheck;\n    _createClass = _createClass && _createClass.hasOwnProperty('default') ? _createClass['default'] : _createClass;\n    URL = URL && URL.hasOwnProperty('default') ? URL['default'] : URL;\n    _typeof = _typeof && _typeof.hasOwnProperty('default') ? _typeof['default'] : _typeof;\n    isFunction = isFunction && isFunction.hasOwnProperty('default') ? isFunction['default'] : isFunction;\n    isObject = isObject && isObject.hasOwnProperty('default') ? isObject['default'] : isObject;\n    _possibleConstructorReturn = _possibleConstructorReturn && _possibleConstructorReturn.hasOwnProperty('default') ? _possibleConstructorReturn['default'] : _possibleConstructorReturn;\n    _getPrototypeOf = _getPrototypeOf && _getPrototypeOf.hasOwnProperty('default') ? _getPrototypeOf['default'] : _getPrototypeOf;\n    _get = _get && _get.hasOwnProperty('default') ? _get['default'] : _get;\n    _inherits = _inherits && _inherits.hasOwnProperty('default') ? _inherits['default'] : _inherits;\n    _regeneratorRuntime = _regeneratorRuntime && _regeneratorRuntime.hasOwnProperty('default') ? _regeneratorRuntime['default'] : _regeneratorRuntime;\n    _asyncToGenerator = _asyncToGenerator && _asyncToGenerator.hasOwnProperty('default') ? _asyncToGenerator['default'] : _asyncToGenerator;\n    EventEmitter = EventEmitter && EventEmitter.hasOwnProperty('default') ? EventEmitter['default'] : EventEmitter;\n    isArray = isArray && isArray.hasOwnProperty('default') ? isArray['default'] : isArray;\n    http = http && http.hasOwnProperty('default') ? http['default'] : http;\n    https = https && https.hasOwnProperty('default') ? https['default'] : https;\n\n    var global = function () {\n      return this || (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) === 'object' && self;\n    }() || new Function('return this')();\n    var ProviderResolver =\n    function () {\n      function ProviderResolver(providersModuleFactory) {\n        _classCallCheck(this, ProviderResolver);\n        this.providersModuleFactory = providersModuleFactory;\n      }\n      _createClass(ProviderResolver, [{\n        key: \"resolve\",\n        value: function resolve(provider, net) {\n          if (!provider) {\n            return provider;\n          }\n          if (typeof provider === 'string') {\n            if (/^http(s)?:\\/\\//i.test(provider)) {\n              return this.providersModuleFactory.createHttpProvider(provider);\n            }\n            if (/^ws(s)?:\\/\\//i.test(provider)) {\n              return this.providersModuleFactory.createWebsocketProvider(provider);\n            }\n            if (provider && isObject(net) && isFunction(net.connect)) {\n              return this.providersModuleFactory.createIpcProvider(provider, net);\n            }\n          }\n          if (provider.sendPayload && provider.subscribe) {\n            return provider;\n          }\n          if (typeof global.mist !== 'undefined' && provider.constructor.name === 'EthereumProvider') {\n            return this.providersModuleFactory.createMistEthereumProvider(provider);\n          }\n          if (provider.isEIP1193) {\n            return this.providersModuleFactory.createWeb3EthereumProvider(provider);\n          }\n          if (this.isMetamaskInpageProvider(provider)) {\n            return this.providersModuleFactory.createMetamaskProvider(provider);\n          }\n          return this.providersModuleFactory.createCustomProvider(provider);\n        }\n      }, {\n        key: \"isMetamaskInpageProvider\",\n        value: function isMetamaskInpageProvider(provider) {\n          return provider.constructor.name === 'MetamaskInpageProvider';\n        }\n      }]);\n      return ProviderResolver;\n    }();\n\n    var messageId = 0;\n    var JsonRpcMapper =\n    function () {\n      function JsonRpcMapper() {\n        _classCallCheck(this, JsonRpcMapper);\n      }\n      _createClass(JsonRpcMapper, null, [{\n        key: \"toPayload\",\n        value: function toPayload(method, params) {\n          if (!method) {\n            throw new Error(\"JSONRPC method should be specified for params: \\\"\".concat(JSON.stringify(params), \"\\\"!\"));\n          }\n          var id = messageId;\n          messageId++;\n          return {\n            jsonrpc: '2.0',\n            id: id,\n            method: method,\n            params: params || []\n          };\n        }\n      }]);\n      return JsonRpcMapper;\n    }();\n\n    var JsonRpcResponseValidator =\n    function () {\n      function JsonRpcResponseValidator() {\n        _classCallCheck(this, JsonRpcResponseValidator);\n      }\n      _createClass(JsonRpcResponseValidator, null, [{\n        key: \"validate\",\n        value: function validate(response) {\n          var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          if (isObject(response)) {\n            if (response.error) {\n              if (response.error instanceof Error) {\n                return new Error(\"Node error: \".concat(response.error.message));\n              }\n              return new Error(\"Node error: \".concat(JSON.stringify(response.error)));\n            }\n            if (payload && response.id !== payload.id) {\n              return new Error(\"Validation error: Invalid JSON-RPC response ID (request: \".concat(payload.id, \" / response: \").concat(response.id, \")\"));\n            }\n            if (response.result === undefined) {\n              return new Error('Validation error: Undefined JSON-RPC result');\n            }\n            return true;\n          }\n          return new Error('Validation error: Response should be of type Object');\n        }\n      }]);\n      return JsonRpcResponseValidator;\n    }();\n\n    var AbstractSocketProvider =\n    function (_EventEmitter) {\n      _inherits(AbstractSocketProvider, _EventEmitter);\n      function AbstractSocketProvider(connection, timeout) {\n        var _this;\n        _classCallCheck(this, AbstractSocketProvider);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AbstractSocketProvider).call(this));\n        _this.connection = connection;\n        _this.timeout = timeout;\n        _this.subscriptions = {};\n        _this.registerEventListeners();\n        _this.READY = 'ready';\n        _this.CONNECT = 'connect';\n        _this.ERROR = 'error';\n        _this.CLOSE = 'close';\n        _this.SOCKET_MESSAGE = 'socket_message';\n        _this.SOCKET_READY = 'socket_ready';\n        _this.SOCKET_CLOSE = 'socket_close';\n        _this.SOCKET_ERROR = 'socket_error';\n        _this.SOCKET_CONNECT = 'socket_connect';\n        _this.SOCKET_NETWORK_CHANGED = 'socket_networkChanged';\n        _this.SOCKET_ACCOUNTS_CHANGED = 'socket_accountsChanged';\n        return _this;\n      }\n      _createClass(AbstractSocketProvider, [{\n        key: \"supportsSubscriptions\",\n        value: function supportsSubscriptions() {\n          return true;\n        }\n      }, {\n        key: \"registerEventListeners\",\n        value: function registerEventListeners() {}\n      }, {\n        key: \"removeAllSocketListeners\",\n        value: function removeAllSocketListeners() {\n          this.removeAllListeners(this.SOCKET_MESSAGE);\n          this.removeAllListeners(this.SOCKET_READY);\n          this.removeAllListeners(this.SOCKET_CLOSE);\n          this.removeAllListeners(this.SOCKET_ERROR);\n          this.removeAllListeners(this.SOCKET_CONNECT);\n        }\n      }, {\n        key: \"disconnect\",\n        value: function disconnect(code, reason) {}\n      }, {\n        key: \"send\",\n        value: function () {\n          var _send = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee(method, parameters) {\n            var response, validationResult;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return this.sendPayload(JsonRpcMapper.toPayload(method, parameters));\n                  case 2:\n                    response = _context.sent;\n                    validationResult = JsonRpcResponseValidator.validate(response);\n                    if (!(validationResult instanceof Error)) {\n                      _context.next = 6;\n                      break;\n                    }\n                    throw validationResult;\n                  case 6:\n                    return _context.abrupt(\"return\", response.result);\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n          function send(_x, _x2) {\n            return _send.apply(this, arguments);\n          }\n          return send;\n        }()\n      }, {\n        key: \"sendBatch\",\n        value: function sendBatch(methods, moduleInstance) {\n          var payload = [];\n          methods.forEach(function (method) {\n            method.beforeExecution(moduleInstance);\n            payload.push(JsonRpcMapper.toPayload(method.rpcMethod, method.parameters));\n          });\n          return this.sendPayload(payload);\n        }\n      }, {\n        key: \"onReady\",\n        value: function onReady(event) {\n          this.emit(this.READY, event);\n          this.emit(this.SOCKET_READY, event);\n        }\n      }, {\n        key: \"onError\",\n        value: function onError(error) {\n          this.emit(this.ERROR, error);\n          this.emit(this.SOCKET_ERROR, error);\n          this.removeAllSocketListeners();\n          this.removeAllListeners();\n        }\n      }, {\n        key: \"onClose\",\n        value: function onClose() {\n          var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n          this.emit(this.CLOSE, error);\n          this.emit(this.SOCKET_CLOSE, error);\n          this.removeAllSocketListeners();\n          this.removeAllListeners();\n        }\n      }, {\n        key: \"onConnect\",\n        value: function () {\n          var _onConnect = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee2() {\n            var subscriptionKeys, subscriptionId, _i, _subscriptionKeys, key;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    subscriptionKeys = Object.keys(this.subscriptions);\n                    if (!(subscriptionKeys.length > 0)) {\n                      _context2.next = 13;\n                      break;\n                    }\n                    _i = 0, _subscriptionKeys = subscriptionKeys;\n                  case 3:\n                    if (!(_i < _subscriptionKeys.length)) {\n                      _context2.next = 13;\n                      break;\n                    }\n                    key = _subscriptionKeys[_i];\n                    _context2.next = 7;\n                    return this.subscribe(this.subscriptions[key].subscribeMethod, this.subscriptions[key].parameters[0], this.subscriptions[key].parameters.slice(1));\n                  case 7:\n                    subscriptionId = _context2.sent;\n                    delete this.subscriptions[subscriptionId];\n                    this.subscriptions[key].id = subscriptionId;\n                  case 10:\n                    _i++;\n                    _context2.next = 3;\n                    break;\n                  case 13:\n                    this.emit(this.SOCKET_CONNECT);\n                    this.emit(this.CONNECT);\n                  case 15:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, this);\n          }));\n          function onConnect() {\n            return _onConnect.apply(this, arguments);\n          }\n          return onConnect;\n        }()\n      }, {\n        key: \"onMessage\",\n        value: function onMessage(response) {\n          var event;\n          if (!isObject(response)) {\n            response = JSON.parse(response);\n          }\n          if (isArray(response)) {\n            event = response[0].id;\n          } else if (typeof response.id === 'undefined') {\n            event = this.getSubscriptionEvent(response.params.subscription);\n            response = response.params;\n          } else {\n            event = response.id;\n          }\n          this.emit(this.SOCKET_MESSAGE, response);\n          this.emit(event, response);\n        }\n      }, {\n        key: \"reset\",\n        value: function reset() {\n          this.removeAllListeners();\n          this.registerEventListeners();\n        }\n      }, {\n        key: \"subscribe\",\n        value: function subscribe() {\n          var _this2 = this;\n          var subscribeMethod = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'eth_subscribe';\n          var subscriptionMethod = arguments.length > 1 ? arguments[1] : undefined;\n          var parameters = arguments.length > 2 ? arguments[2] : undefined;\n          parameters.unshift(subscriptionMethod);\n          return this.send(subscribeMethod, parameters).then(function (subscriptionId) {\n            _this2.subscriptions[subscriptionId] = {\n              id: subscriptionId,\n              subscribeMethod: subscribeMethod,\n              parameters: parameters\n            };\n            return subscriptionId;\n          }).catch(function (error) {\n            throw new Error(\"Provider error: \".concat(error));\n          });\n        }\n      }, {\n        key: \"unsubscribe\",\n        value: function unsubscribe(subscriptionId) {\n          var _this3 = this;\n          var unsubscribeMethod = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'eth_unsubscribe';\n          if (this.hasSubscription(subscriptionId)) {\n            return this.send(unsubscribeMethod, [subscriptionId]).then(function (response) {\n              if (response) {\n                _this3.removeAllListeners(_this3.getSubscriptionEvent(subscriptionId));\n                delete _this3.subscriptions[subscriptionId];\n              }\n              return response;\n            });\n          }\n          return Promise.reject(new Error(\"Provider error: Subscription with ID \".concat(subscriptionId, \" does not exist.\")));\n        }\n      }, {\n        key: \"clearSubscriptions\",\n        value: function clearSubscriptions() {\n          var _this4 = this;\n          var unsubscribeMethod = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'eth_unsubscribe';\n          var unsubscribePromises = [];\n          Object.keys(this.subscriptions).forEach(function (key) {\n            _this4.removeAllListeners(key);\n            unsubscribePromises.push(_this4.unsubscribe(_this4.subscriptions[key].id, unsubscribeMethod));\n          });\n          return Promise.all(unsubscribePromises).then(function (results) {\n            if (results.includes(false)) {\n              throw new Error(\"Could not unsubscribe all subscriptions: \".concat(JSON.stringify(results)));\n            }\n            return true;\n          });\n        }\n      }, {\n        key: \"hasSubscription\",\n        value: function hasSubscription(subscriptionId) {\n          return typeof this.getSubscriptionEvent(subscriptionId) !== 'undefined';\n        }\n      }, {\n        key: \"getSubscriptionEvent\",\n        value: function getSubscriptionEvent(subscriptionId) {\n          var _this5 = this;\n          if (this.subscriptions[subscriptionId]) {\n            return subscriptionId;\n          }\n          var event;\n          Object.keys(this.subscriptions).forEach(function (key) {\n            if (_this5.subscriptions[key].id === subscriptionId) {\n              event = key;\n            }\n          });\n          return event;\n        }\n      }, {\n        key: \"connected\",\n        get: function get() {}\n      }]);\n      return AbstractSocketProvider;\n    }(EventEmitter);\n\n    var WebsocketProvider =\n    function (_AbstractSocketProvid) {\n      _inherits(WebsocketProvider, _AbstractSocketProvid);\n      function WebsocketProvider(connection, timeout) {\n        var _this;\n        _classCallCheck(this, WebsocketProvider);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(WebsocketProvider).call(this, connection, timeout));\n        _this.host = _this.connection.url;\n        return _this;\n      }\n      _createClass(WebsocketProvider, [{\n        key: \"onMessage\",\n        value: function onMessage(messageEvent) {\n          _get(_getPrototypeOf(WebsocketProvider.prototype), \"onMessage\", this).call(this, messageEvent.data);\n        }\n      }, {\n        key: \"onError\",\n        value: function onError(event) {\n          if (event.code === 'ECONNREFUSED') {\n            this.reconnect();\n            return;\n          }\n          _get(_getPrototypeOf(WebsocketProvider.prototype), \"onError\", this).call(this, event);\n        }\n      }, {\n        key: \"onClose\",\n        value: function onClose(closeEvent) {\n          if (closeEvent.code !== 1000 || closeEvent.wasClean === false) {\n            this.reconnect();\n            return;\n          }\n          _get(_getPrototypeOf(WebsocketProvider.prototype), \"onClose\", this).call(this);\n        }\n      }, {\n        key: \"reconnect\",\n        value: function reconnect() {\n          var _this2 = this;\n          setTimeout(function () {\n            _this2.removeAllSocketListeners();\n            var connection = [];\n            if (_this2.connection.constructor.name === 'W3CWebsocket') {\n              connection = new _this2.connection.constructor(_this2.host, _this2.connection._client.protocol, null, _this2.connection._client.headers, _this2.connection._client.requestOptions, _this2.connection._client.config);\n            } else {\n              connection = new _this2.connection.constructor(_this2.host, _this2.connection.protocol || undefined);\n            }\n            _this2.connection = connection;\n            _this2.registerEventListeners();\n          }, 5000);\n        }\n      }, {\n        key: \"disconnect\",\n        value: function disconnect() {\n          var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n          var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          this.connection.close(code, reason);\n        }\n      }, {\n        key: \"registerEventListeners\",\n        value: function registerEventListeners() {\n          this.connection.addEventListener('message', this.onMessage.bind(this));\n          this.connection.addEventListener('open', this.onReady.bind(this));\n          this.connection.addEventListener('open', this.onConnect.bind(this));\n          this.connection.addEventListener('close', this.onClose.bind(this));\n          this.connection.addEventListener('error', this.onError.bind(this));\n        }\n      }, {\n        key: \"removeAllListeners\",\n        value: function removeAllListeners(event) {\n          switch (event) {\n            case this.SOCKET_MESSAGE:\n              this.connection.removeEventListener('message', this.onMessage);\n              break;\n            case this.SOCKET_READY:\n              this.connection.removeEventListener('open', this.onReady);\n              break;\n            case this.SOCKET_CLOSE:\n              this.connection.removeEventListener('close', this.onClose);\n              break;\n            case this.SOCKET_ERROR:\n              this.connection.removeEventListener('error', this.onError);\n              break;\n            case this.SOCKET_CONNECT:\n              this.connection.removeEventListener('connect', this.onConnect);\n              break;\n          }\n          _get(_getPrototypeOf(WebsocketProvider.prototype), \"removeAllListeners\", this).call(this, event);\n        }\n      }, {\n        key: \"isConnecting\",\n        value: function isConnecting() {\n          return this.connection.readyState === this.connection.CONNECTING;\n        }\n      }, {\n        key: \"sendPayload\",\n        value: function sendPayload(payload) {\n          var _this3 = this;\n          return new Promise(function (resolve, reject) {\n            _this3.once('error', reject);\n            if (!_this3.isConnecting()) {\n              var timeout, id;\n              if (_this3.connection.readyState !== _this3.connection.OPEN) {\n                return reject(new Error('Connection error: Connection is not open on send()'));\n              }\n              try {\n                _this3.connection.send(JSON.stringify(payload));\n              } catch (error) {\n                reject(error);\n              }\n              if (_this3.timeout) {\n                timeout = setTimeout(function () {\n                  reject(new Error('Connection error: Timeout exceeded'));\n                }, _this3.timeout);\n              }\n              if (isArray(payload)) {\n                id = payload[0].id;\n              } else {\n                id = payload.id;\n              }\n              _this3.once(id, function (response) {\n                if (timeout) {\n                  clearTimeout(timeout);\n                }\n                return resolve(response);\n              });\n              return;\n            }\n            _this3.once('connect', function () {\n              _this3.sendPayload(payload).then(resolve).catch(reject);\n            });\n          });\n        }\n      }, {\n        key: \"connected\",\n        get: function get() {\n          return this.connection.readyState === this.connection.OPEN;\n        }\n      }]);\n      return WebsocketProvider;\n    }(AbstractSocketProvider);\n\n    var IpcProvider =\n    function (_AbstractSocketProvid) {\n      _inherits(IpcProvider, _AbstractSocketProvid);\n      function IpcProvider(connection, path) {\n        var _this;\n        _classCallCheck(this, IpcProvider);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(IpcProvider).call(this, connection, null));\n        _this.host = path;\n        _this.lastChunk = '';\n        return _this;\n      }\n      _createClass(IpcProvider, [{\n        key: \"disconnect\",\n        value: function disconnect() {\n          this.connection.destroy();\n        }\n      }, {\n        key: \"reconnect\",\n        value: function reconnect() {\n          this.connection.connect({\n            path: this.path\n          });\n        }\n      }, {\n        key: \"onMessage\",\n        value: function onMessage(message) {\n          var _this2 = this;\n          var result = null;\n          var returnValues = [];\n          var dechunkedData = message.toString().replace(/\\}[\\n\\r]?\\{/g, '}|--|{')\n          .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{')\n          .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{')\n          .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{')\n          .split('|--|');\n          dechunkedData.forEach(function (data) {\n            result = null;\n            if (_this2.lastChunk) {\n              data = _this2.lastChunk + data;\n            }\n            try {\n              result = JSON.parse(data);\n            } catch (error) {\n              _this2.lastChunk = data;\n              return;\n            }\n            _this2.lastChunk = null;\n            returnValues.push(result);\n          });\n          returnValues.forEach(function (chunk) {\n            _get(_getPrototypeOf(IpcProvider.prototype), \"onMessage\", _this2).call(_this2, chunk);\n          });\n        }\n      }, {\n        key: \"registerEventListeners\",\n        value: function registerEventListeners() {\n          this.connection.on('data', this.onMessage.bind(this));\n          this.connection.on('connect', this.onConnect.bind(this));\n          this.connection.on('error', this.onError.bind(this));\n          this.connection.on('close', this.onClose.bind(this));\n          this.connection.on('timeout', this.onClose.bind(this));\n          this.connection.on('ready', this.onReady.bind(this));\n        }\n      }, {\n        key: \"removeAllListeners\",\n        value: function removeAllListeners(event) {\n          switch (event) {\n            case this.SOCKET_MESSAGE:\n              this.connection.removeListener('data', this.onMessage);\n              break;\n            case this.SOCKET_READY:\n              this.connection.removeListener('ready', this.onReady);\n              break;\n            case this.SOCKET_CLOSE:\n              this.connection.removeListener('close', this.onClose);\n              break;\n            case this.SOCKET_ERROR:\n              this.connection.removeListener('error', this.onError);\n              break;\n            case this.SOCKET_CONNECT:\n              this.connection.removeListener('connect', this.onConnect);\n              break;\n          }\n          _get(_getPrototypeOf(IpcProvider.prototype), \"removeAllListeners\", this).call(this, event);\n        }\n      }, {\n        key: \"sendPayload\",\n        value: function sendPayload(payload) {\n          var _this3 = this;\n          return new Promise(function (resolve, reject) {\n            _this3.once('error', reject);\n            if (!_this3.connection.writable) {\n              _this3.connection.connect({\n                path: _this3.path\n              });\n            }\n            if (_this3.connection.write(JSON.stringify(payload))) {\n              var id;\n              if (isArray(payload)) {\n                id = payload[0].id;\n              } else {\n                id = payload.id;\n              }\n              _this3.once(id, resolve);\n              return;\n            }\n            return reject(new Error(\"Connection error: Couldn't write on the socket with Socket.write(payload)\"));\n          });\n        }\n      }, {\n        key: \"connected\",\n        get: function get() {\n          return !this.connection.pending;\n        }\n      }]);\n      return IpcProvider;\n    }(AbstractSocketProvider);\n\n    var HttpProvider =\n    function () {\n      function HttpProvider() {\n        var host = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http://localhost:8545';\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var providersModuleFactory = arguments.length > 2 ? arguments[2] : undefined;\n        _classCallCheck(this, HttpProvider);\n        this.host = host;\n        this.timeout = options.timeout || 0;\n        this.headers = options.headers;\n        this.withCredentials = options.withCredentials || false;\n        this.connected = true;\n        this.providersModuleFactory = providersModuleFactory;\n        this.agent = {};\n        var keepAlive = false;\n        if (options.keepAlive === true || options.keepAlive !== false) {\n          keepAlive = true;\n        }\n        if (host.substring(0, 5) === 'https') {\n          this.agent['httpsAgent'] = new https.Agent({\n            keepAlive: keepAlive\n          });\n        } else {\n          this.agent['httpAgent'] = new http.Agent({\n            keepAlive: keepAlive\n          });\n        }\n      }\n      _createClass(HttpProvider, [{\n        key: \"supportsSubscriptions\",\n        value: function supportsSubscriptions() {\n          return false;\n        }\n      }, {\n        key: \"subscribe\",\n        value: function subscribe() {\n          throw new Error('Subscriptions are not supported with the HttpProvider.');\n        }\n      }, {\n        key: \"unsubscribe\",\n        value: function unsubscribe() {\n          throw new Error('Subscriptions are not supported with the HttpProvider.');\n        }\n      }, {\n        key: \"disconnect\",\n        value: function disconnect() {\n          return true;\n        }\n      }, {\n        key: \"send\",\n        value: function () {\n          var _send = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee(method, parameters) {\n            var response, validationResult;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return this.sendPayload(JsonRpcMapper.toPayload(method, parameters));\n                  case 2:\n                    response = _context.sent;\n                    validationResult = JsonRpcResponseValidator.validate(response);\n                    if (!(validationResult instanceof Error)) {\n                      _context.next = 6;\n                      break;\n                    }\n                    throw validationResult;\n                  case 6:\n                    return _context.abrupt(\"return\", response.result);\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n          function send(_x, _x2) {\n            return _send.apply(this, arguments);\n          }\n          return send;\n        }()\n      }, {\n        key: \"sendBatch\",\n        value: function sendBatch(methods, moduleInstance) {\n          var payload = [];\n          methods.forEach(function (method) {\n            method.beforeExecution(moduleInstance);\n            payload.push(JsonRpcMapper.toPayload(method.rpcMethod, method.parameters));\n          });\n          return this.sendPayload(payload);\n        }\n      }, {\n        key: \"sendPayload\",\n        value: function sendPayload(payload) {\n          var _this = this;\n          return new Promise(function (resolve, reject) {\n            var request = _this.providersModuleFactory.createXMLHttpRequest(_this.host, _this.timeout, _this.headers, _this.agent, _this.withCredentials);\n            request.onreadystatechange = function () {\n              if (request.readyState !== 0 && request.readyState !== 1) {\n                _this.connected = true;\n              }\n              if (request.readyState === 4) {\n                if (request.status === 200) {\n                  try {\n                    return resolve(JSON.parse(request.responseText));\n                  } catch (error) {\n                    reject(new Error(\"Invalid JSON as response: \".concat(request.responseText)));\n                  }\n                }\n                if (_this.isInvalidHttpEndpoint(request)) {\n                  reject(new Error(\"Connection refused or URL couldn't be resolved: \".concat(_this.host)));\n                }\n                if (request.status >= 400 && request.status <= 499) {\n                  reject(new Error(\"HttpProvider ERROR: \".concat(request.responseText, \" (code: \").concat(request.status, \")\")));\n                }\n              }\n            };\n            request.ontimeout = function () {\n              _this.connected = false;\n              reject(new Error(\"Connection error: Timeout exceeded after \".concat(_this.timeout, \"ms\")));\n            };\n            try {\n              request.send(JSON.stringify(payload));\n            } catch (error) {\n              _this.connected = false;\n              reject(error);\n            }\n          });\n        }\n      }, {\n        key: \"isInvalidHttpEndpoint\",\n        value: function isInvalidHttpEndpoint(request) {\n          return request.response === null && request.status === 0;\n        }\n      }]);\n      return HttpProvider;\n    }();\n\n    var BatchRequest =\n    function () {\n      function BatchRequest(moduleInstance) {\n        _classCallCheck(this, BatchRequest);\n        this.moduleInstance = moduleInstance;\n        this.methods = [];\n      }\n      _createClass(BatchRequest, [{\n        key: \"add\",\n        value: function add(method) {\n          if (!isObject(method) && method) {\n            throw new Error('Please provide a object of type AbstractMethod.');\n          }\n          this.methods.push(method);\n        }\n      }, {\n        key: \"execute\",\n        value: function execute() {\n          var _this = this;\n          return this.moduleInstance.currentProvider.sendBatch(this.methods, this.moduleInstance).then(function (response) {\n            var errors = [];\n            _this.methods.forEach(function (method, index) {\n              if (!isArray(response)) {\n                method.callback(new Error(\"BatchRequest error: Response should be of type Array but is: \".concat(_typeof(response))), null);\n                errors.push(\"Response should be of type Array but is: \".concat(_typeof(response)));\n                return;\n              }\n              var responseItem = response[index] || null;\n              var validationResult = JsonRpcResponseValidator.validate(responseItem);\n              if (validationResult) {\n                try {\n                  var mappedResult = method.afterExecution(responseItem.result);\n                  response[index] = mappedResult;\n                  method.callback(false, mappedResult);\n                } catch (error) {\n                  errors.push(error);\n                  method.callback(error, null);\n                }\n                return;\n              }\n              errors.push(validationResult);\n              method.callback(validationResult, null);\n            });\n            if (errors.length > 0) {\n              throw new Error(\"BatchRequest error: \".concat(JSON.stringify(errors)));\n            }\n            return {\n              methods: _this.methods,\n              response: response\n            };\n          });\n        }\n      }]);\n      return BatchRequest;\n    }();\n\n    var Web3EthereumProvider =\n    function (_AbstractSocketProvid) {\n      _inherits(Web3EthereumProvider, _AbstractSocketProvid);\n      function Web3EthereumProvider(connection) {\n        var _this;\n        _classCallCheck(this, Web3EthereumProvider);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Web3EthereumProvider).call(this, connection, null));\n        _this.host = 'Web3EthereumProvider';\n        return _this;\n      }\n      _createClass(Web3EthereumProvider, [{\n        key: \"registerEventListeners\",\n        value: function registerEventListeners() {\n          this.connection.on('notification', this.onMessage.bind(this));\n          this.connection.on('connect', this.onConnect.bind(this));\n          this.connection.on('connect', this.onReady.bind(this));\n          this.connection.on('close', this.onClose.bind(this));\n          this.connection.on('networkChanged', this.onNetworkChanged.bind(this));\n          this.connection.on('accountsChanged', this.onAccountsChanged.bind(this));\n        }\n      }, {\n        key: \"removeAllListeners\",\n        value: function removeAllListeners(event) {\n          switch (event) {\n            case this.SOCKET_NETWORK_CHANGED:\n              this.connection.removeListener('networkChanged', this.onNetworkChanged);\n              break;\n            case this.SOCKET_ACCOUNTS_CHANGED:\n              this.connection.removeListener('accountsChanged', this.onAccountsChanged);\n              break;\n            case this.SOCKET_MESSAGE:\n              this.connection.removeListener('notification', this.onMessage);\n              break;\n            case this.SOCKET_READY:\n              this.connection.removeListener('connect', this.onReady);\n              break;\n            case this.SOCKET_CLOSE:\n              this.connection.removeListener('close', this.onClose);\n              break;\n            case this.SOCKET_ERROR:\n              this.connection.removeListener('close', this.onError);\n              break;\n            case this.SOCKET_CONNECT:\n              this.connection.removeListener('connect', this.onConnect);\n              break;\n          }\n          _get(_getPrototypeOf(Web3EthereumProvider.prototype), \"removeAllListeners\", this).call(this, event);\n        }\n      }, {\n        key: \"removeAllSocketListeners\",\n        value: function removeAllSocketListeners() {\n          this.connection.removeAllListeners();\n        }\n      }, {\n        key: \"onNetworkChanged\",\n        value: function onNetworkChanged(networkId) {\n          this.emit('networkChanged', networkId);\n        }\n      }, {\n        key: \"onAccountsChanged\",\n        value: function onAccountsChanged(accounts) {\n          this.emit('accountsChanged', accounts);\n        }\n      }, {\n        key: \"onMessage\",\n        value: function onMessage(response) {\n          this.emit(this.getSubscriptionEvent(response.subscription), response);\n        }\n      }, {\n        key: \"send\",\n        value: function () {\n          var _send = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee(method, parameters) {\n            var response, validationResult;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    response = this.connection.send(method, parameters);\n                    validationResult = JsonRpcResponseValidator.validate(response);\n                    if (!(validationResult instanceof Error)) {\n                      _context.next = 4;\n                      break;\n                    }\n                    throw validationResult;\n                  case 4:\n                    return _context.abrupt(\"return\", response);\n                  case 5:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n          function send(_x, _x2) {\n            return _send.apply(this, arguments);\n          }\n          return send;\n        }()\n      }, {\n        key: \"sendBatch\",\n        value: function sendBatch(methods, moduleInstance) {\n          var _this2 = this;\n          var methodCalls = [];\n          methods.forEach(function (method) {\n            method.beforeExecution(moduleInstance);\n            methodCalls.push(_this2.connection.send(method.rpcMethod, method.parameters));\n          });\n          return Promise.all(methodCalls);\n        }\n      }]);\n      return Web3EthereumProvider;\n    }(AbstractSocketProvider);\n\n    var MetamaskProvider =\n    function (_AbstractSocketProvid) {\n      _inherits(MetamaskProvider, _AbstractSocketProvid);\n      function MetamaskProvider(inpageProvider) {\n        var _this;\n        _classCallCheck(this, MetamaskProvider);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(MetamaskProvider).call(this, inpageProvider, null));\n        _this.host = 'metamask';\n        return _this;\n      }\n      _createClass(MetamaskProvider, [{\n        key: \"registerEventListeners\",\n        value: function registerEventListeners() {\n          this.connection.on('accountsChanged', this.onAccountsChanged.bind(this));\n          this.connection.on('networkChanged', this.onReady.bind(this));\n          this.connection.on('networkChanged', this.onNetworkChanged.bind(this));\n          this.connection.on('data', this.onMessage.bind(this));\n          this.connection.on('error', this.onError.bind(this));\n        }\n      }, {\n        key: \"onMessage\",\n        value: function onMessage(metamaskParam, payload) {\n          _get(_getPrototypeOf(MetamaskProvider.prototype), \"onMessage\", this).call(this, payload);\n        }\n      }, {\n        key: \"removeAllListeners\",\n        value: function removeAllListeners(event) {\n          switch (event) {\n            case this.SOCKET_NETWORK_CHANGED:\n              this.connection.removeListener('networkChanged', this.onNetworkChanged);\n              break;\n            case this.SOCKET_ACCOUNTS_CHANGED:\n              this.connection.removeListener('accountsChanged', this.onAccountsChanged);\n              break;\n            case this.SOCKET_MESSAGE:\n              this.connection.removeListener('data', this.onMessage);\n              break;\n            case this.SOCKET_ERROR:\n              this.connection.removeListener('error', this.onError);\n              break;\n          }\n          _get(_getPrototypeOf(MetamaskProvider.prototype), \"removeAllListeners\", this).call(this, event);\n        }\n      }, {\n        key: \"removeAllSocketListeners\",\n        value: function removeAllSocketListeners() {\n          this.connection.removeListener(this.SOCKET_NETWORK_CHANGED, this.onNetworkChanged);\n          this.connection.removeListener(this.SOCKET_ACCOUNTS_CHANGED, this.onAccountsChanged);\n          _get(_getPrototypeOf(MetamaskProvider.prototype), \"removeAllSocketListeners\", this).call(this);\n        }\n      }, {\n        key: \"onNetworkChanged\",\n        value: function onNetworkChanged(networkId) {\n          this.emit('networkChanged', networkId);\n        }\n      }, {\n        key: \"onAccountsChanged\",\n        value: function onAccountsChanged(accounts) {\n          this.emit('accountsChanged', accounts);\n        }\n      }, {\n        key: \"disconnect\",\n        value: function disconnect() {\n          return true;\n        }\n      }, {\n        key: \"sendPayload\",\n        value: function sendPayload(payload) {\n          var _this2 = this;\n          return new Promise(function (resolve, reject) {\n            _this2.connection.send(payload, function (error, response) {\n              _this2.removeAllListeners(payload.id);\n              if (!error) {\n                return resolve(response);\n              }\n              reject(error);\n            });\n          });\n        }\n      }, {\n        key: \"connected\",\n        get: function get() {\n          return this.connection.isConnected();\n        }\n      }]);\n      return MetamaskProvider;\n    }(AbstractSocketProvider);\n\n    var MistEthereumProvider =\n    function (_AbstractSocketProvid) {\n      _inherits(MistEthereumProvider, _AbstractSocketProvid);\n      function MistEthereumProvider(connection) {\n        var _this;\n        _classCallCheck(this, MistEthereumProvider);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(MistEthereumProvider).call(this, connection, null));\n        _this.host = 'mist';\n        return _this;\n      }\n      _createClass(MistEthereumProvider, [{\n        key: \"registerEventListeners\",\n        value: function registerEventListeners() {\n          this.connection.on('data', this.onMessage.bind(this));\n          this.connection.on('error', this.onError.bind(this));\n          this.connection.on('connect', this.onConnect.bind(this));\n          this.connection.on('connect', this.onReady.bind(this));\n          this.connection.on('end', this.onClose.bind(this));\n        }\n      }, {\n        key: \"removeAllListeners\",\n        value: function removeAllListeners(event) {\n          switch (event) {\n            case this.SOCKET_MESSAGE:\n              this.connection.removeListener('data', this.onMessage);\n              break;\n            case this.SOCKET_ERROR:\n              this.connection.removeListener('error', this.onError);\n              break;\n            case this.SOCKET_CONNECT:\n              this.connection.removeListener('connect', this.onConnect);\n              break;\n            case this.SOCKET_READY:\n              this.connection.removeListener('connect', this.onConnect);\n              break;\n            case this.SOCKET_CLOSE:\n              this.connection.removeListener('end', this.onClose);\n              break;\n          }\n          _get(_getPrototypeOf(MistEthereumProvider.prototype), \"removeAllListeners\", this).call(this, event);\n        }\n      }, {\n        key: \"disconnect\",\n        value: function disconnect() {\n          return true;\n        }\n      }, {\n        key: \"sendPayload\",\n        value: function sendPayload(payload) {\n          var _this2 = this;\n          return new Promise(function (resolve, reject) {\n            _this2.connection.send(payload, function (error, response) {\n              _this2.removeAllListeners(payload.id);\n              if (!error) {\n                return resolve(response);\n              }\n              reject(error);\n            });\n          });\n        }\n      }, {\n        key: \"connected\",\n        get: function get() {\n          return this.connection.isConnected();\n        }\n      }]);\n      return MistEthereumProvider;\n    }(AbstractSocketProvider);\n\n    var CustomProvider =\n    function () {\n      function CustomProvider(connection) {\n        _classCallCheck(this, CustomProvider);\n        this.host = 'CustomProvider';\n        this.connection = connection;\n        this.checkConnectionMethods();\n      }\n      _createClass(CustomProvider, [{\n        key: \"supportsSubscriptions\",\n        value: function supportsSubscriptions() {\n          return false;\n        }\n      }, {\n        key: \"checkConnectionMethods\",\n        value: function checkConnectionMethods() {\n          if (this.connection.send || this.connection.sendAsync) {\n            return true;\n          }\n          throw new Error('Invalid provider injected!');\n        }\n      }, {\n        key: \"subscribe\",\n        value: function subscribe() {\n          throw new Error('Subscriptions are not supported with the CustomProvider.');\n        }\n      }, {\n        key: \"unsubscribe\",\n        value: function unsubscribe() {\n          throw new Error('Subscriptions are not supported with the CustomProvider.');\n        }\n      }, {\n        key: \"send\",\n        value: function () {\n          var _send = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee(method, parameters) {\n            var response, validationResult;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return this.sendPayload(JsonRpcMapper.toPayload(method, parameters));\n                  case 2:\n                    response = _context.sent;\n                    validationResult = JsonRpcResponseValidator.validate(response);\n                    if (!(validationResult instanceof Error)) {\n                      _context.next = 6;\n                      break;\n                    }\n                    throw validationResult;\n                  case 6:\n                    return _context.abrupt(\"return\", response.result);\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n          function send(_x, _x2) {\n            return _send.apply(this, arguments);\n          }\n          return send;\n        }()\n      }, {\n        key: \"sendBatch\",\n        value: function sendBatch(methods, moduleInstance) {\n          var payload = [];\n          methods.forEach(function (method) {\n            method.beforeExecution(moduleInstance);\n            payload.push(JsonRpcMapper.toPayload(method.rpcMethod, method.parameters));\n          });\n          return this.sendPayload(payload);\n        }\n      }, {\n        key: \"sendPayload\",\n        value: function sendPayload(payload) {\n          var _this = this;\n          return new Promise(function (resolve, reject) {\n            if (_this.connection.sendAsync) {\n              _this.connection.sendAsync(payload, function (error, response) {\n                if (!error) {\n                  resolve(response);\n                }\n                reject(error);\n              });\n              return;\n            }\n            _this.connection.send(payload, function (error, response) {\n              if (!error) {\n                resolve(response);\n              }\n              reject(error);\n            });\n          });\n        }\n      }]);\n      return CustomProvider;\n    }();\n\n    var ProvidersModuleFactory =\n    function () {\n      function ProvidersModuleFactory() {\n        _classCallCheck(this, ProvidersModuleFactory);\n      }\n      _createClass(ProvidersModuleFactory, [{\n        key: \"createBatchRequest\",\n        value: function createBatchRequest(moduleInstance) {\n          return new BatchRequest(moduleInstance);\n        }\n      }, {\n        key: \"createProviderResolver\",\n        value: function createProviderResolver() {\n          return new ProviderResolver(this);\n        }\n      }, {\n        key: \"createHttpProvider\",\n        value: function createHttpProvider(url) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          return new HttpProvider(url, options, this);\n        }\n      }, {\n        key: \"createXMLHttpRequest\",\n        value: function createXMLHttpRequest(host, timeout, headers, agent, withCredentials) {\n          var request;\n          if (typeof process !== 'undefined' && process.versions != null && process.versions.node != null) {\n            request = new xhr2Cookies.XMLHttpRequest();\n            request.nodejsSet(agent);\n          } else {\n            request = new XMLHttpRequest();\n          }\n          request.open('POST', host, true);\n          request.setRequestHeader('Content-Type', 'application/json');\n          request.timeout = timeout;\n          request.withCredentials = withCredentials;\n          if (headers) {\n            headers.forEach(function (header) {\n              request.setRequestHeader(header.name, header.value);\n            });\n          }\n          return request;\n        }\n      }, {\n        key: \"createWebsocketProvider\",\n        value: function createWebsocketProvider(url) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          var connection = '';\n          if (typeof process !== 'undefined' && process.versions != null && process.versions.node != null) {\n            var headers = options.headers || {};\n            var urlObject = new URL(url);\n            if (!headers.authorization && urlObject.username && urlObject.password) {\n              var authToken = Buffer.from(\"\".concat(urlObject.username, \":\").concat(urlObject.password)).toString('base64');\n              headers.authorization = \"Basic \".concat(authToken);\n            }\n            connection = new websocket.w3cwebsocket(url, options.protocol, null, headers, null, options.clientConfig);\n          } else {\n            connection = new window.WebSocket(url, options.protocol);\n          }\n          return new WebsocketProvider(connection, options.timeout);\n        }\n      }, {\n        key: \"createIpcProvider\",\n        value: function createIpcProvider(path, net) {\n          return new IpcProvider(net.connect({\n            path: path\n          }), path);\n        }\n      }, {\n        key: \"createWeb3EthereumProvider\",\n        value: function createWeb3EthereumProvider(connection) {\n          return new Web3EthereumProvider(connection);\n        }\n      }, {\n        key: \"createMetamaskProvider\",\n        value: function createMetamaskProvider(inpageProvider) {\n          return new MetamaskProvider(inpageProvider);\n        }\n      }, {\n        key: \"createMistEthereumProvider\",\n        value: function createMistEthereumProvider(mistEthereumProvider) {\n          return new MistEthereumProvider(mistEthereumProvider);\n        }\n      }, {\n        key: \"createCustomProvider\",\n        value: function createCustomProvider(connection) {\n          return new CustomProvider(connection);\n        }\n      }]);\n      return ProvidersModuleFactory;\n    }();\n\n    var global$1 = function () {\n      return this || (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) === 'object' && self;\n    }() || new Function('return this')();\n    var ProviderDetector =\n    function () {\n      function ProviderDetector() {\n        _classCallCheck(this, ProviderDetector);\n      }\n      _createClass(ProviderDetector, null, [{\n        key: \"detect\",\n        value: function detect() {\n          if (typeof global$1.ethereumProvider !== 'undefined' && global$1.ethereumProvider.constructor.name === 'EthereumProvider') {\n            return global$1.ethereumProvider;\n          }\n          if (typeof global$1.web3 !== 'undefined' && global$1.web3.currentProvider) {\n            return global$1.web3.currentProvider;\n          }\n          return null;\n        }\n      }]);\n      return ProviderDetector;\n    }();\n\n    function HttpProvider$1(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new ProvidersModuleFactory().createHttpProvider(url, options);\n    }\n    function WebsocketProvider$1(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new ProvidersModuleFactory().createWebsocketProvider(url, options);\n    }\n    function IpcProvider$1(path, net) {\n      return new ProvidersModuleFactory().createIpcProvider(path, net);\n    }\n    function BatchRequest$1(moduleInstance) {\n      return new ProvidersModuleFactory().createBatchRequest(moduleInstance);\n    }\n    function ProviderResolver$1() {\n      return new ProvidersModuleFactory().createProviderResolver();\n    }\n\n    exports.BatchRequest = BatchRequest$1;\n    exports.HttpProvider = HttpProvider$1;\n    exports.IpcProvider = IpcProvider$1;\n    exports.ProviderDetector = ProviderDetector;\n    exports.ProviderResolver = ProviderResolver$1;\n    exports.ProvidersModuleFactory = ProvidersModuleFactory;\n    exports.Web3EthereumProvider = Web3EthereumProvider;\n    exports.WebsocketProvider = WebsocketProvider$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":2,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":3,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":4,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":5,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":6,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":7,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":8,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":9,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":10,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":11,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":12,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":13,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":14,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":15,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":16,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":17,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":18,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":19,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":20,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":21,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":22,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":23,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":24,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":25,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":26,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":27,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":28,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":29,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":30,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":31,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":32,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":33,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":34,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":35,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":36,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":37,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":38,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":39,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":40,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":41,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":42,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":43,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":44,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":45,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":46,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":47,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":48,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":49,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":50,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":51,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":52,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":53,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":54,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":55,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":56,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":57,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":58,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":59,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":60,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":61,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":62,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":63,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":64,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":65,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":66,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":67,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":68,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":69,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":70,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":71,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":72,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":73,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":74,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":75,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":76,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":77,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":78,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":79,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":80,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":81,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":82,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":83,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":84,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":85,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":86,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":87,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":88,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":89,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":90,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":91,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":92,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":93,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":94,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":95,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":96,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":97,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":98,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":99,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":100,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":101,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":102,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":103,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":104,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":105,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":106,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":107,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":108,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":109,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":110,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":111,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":112,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":113,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":114,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":115,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":116,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":117,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":118,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":119,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":120,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":121,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":122,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":123,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":124,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":125,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":126,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":127,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":128,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":129,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":130,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":131,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":132,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":133,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":134,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":135,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":136,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":137,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":138,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":139,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":140,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":141,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":142,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":143,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":144,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":145,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":146,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":147,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":148,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":149,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":150,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":151,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":152,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":153,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":154,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":155,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":156,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":157,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":158,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":159,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":160,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":161,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":162,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":163,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":164,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":165,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":166,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":167,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":168,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":169,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":170,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":171,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":172,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":173,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":174,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":175,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":176,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":177,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":178,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":179,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":180,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":181,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":182,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":183,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":184,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":185,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":186,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":187,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":188,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":189,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":190,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":191,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":192,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":193,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":194,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":195,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":196,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":197,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":198,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":199,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":200,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":201,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":202,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":203,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":204,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":205,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":206,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":207,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":208,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":209,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":210,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":211,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":212,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":213,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":214,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":215,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":216,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":217,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":218,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":219,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":220,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":221,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":222,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":223,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":224,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":225,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":226,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":227,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":228,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":229,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":230,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":231,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":232,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":233,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":234,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":235,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":236,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":237,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":238,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":239,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":240,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":241,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":242,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":243,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":244,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":245,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":246,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":247,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":248,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":249,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":250,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":251,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":252,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":253,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":254,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":255,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":256,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":257,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":258,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":259,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":260,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":261,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":262,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":263,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":264,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":265,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":266,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":267,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":268,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":269,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":270,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":271,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":272,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":273,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":274,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":275,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":276,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":277,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":278,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":279,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":280,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":281,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":282,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":283,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":284,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":285,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":286,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":287,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":288,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":289,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":290,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":291,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":292,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":293,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":294,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":295,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":296,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":297,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":298,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":299,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":300,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":301,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":302,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":303,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":304,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":305,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":306,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":307,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":308,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":309,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":310,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":311,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":312,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":313,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":314,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":315,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":316,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":317,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":318,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":319,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":320,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":321,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":322,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":323,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":324,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":325,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":326,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":327,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":328,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":329,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":330,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":331,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":332,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":333,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":334,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":335,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":336,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":337,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":338,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":339,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":340,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":341,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":342,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":343,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":344,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":345,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":346,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":347,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":348,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":349,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":350,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":351,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":352,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":353,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":354,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":355,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":356,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":357,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":358,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":359,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":360,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":361,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":362,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":363,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":364,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":365,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":366,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":367,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":368,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":369,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":370,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":371,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":372,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":373,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":374,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":375,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":376,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":377,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":378,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":379,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":380,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":381,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":382,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":383,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":384,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":385,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":386,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":387,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":388,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":389,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":390,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":391,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":392,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":393,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":394,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":395,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":396,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":397,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":398,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":399,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":400,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":401,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":402,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":403,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":404,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":405,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":406,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":407,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":408,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":409,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":410,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":411,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":412,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":413,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":414,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":415,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":416,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":417,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":418,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":419,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":420,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":421,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":422,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":423,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":424,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":425,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":426,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":427,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":428,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":429,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":430,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":431,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":432,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":433,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":434,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":435,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":436,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":437,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":438,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":439,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":440,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":441,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":442,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":443,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":444,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":445,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":446,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":447,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":448,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":449,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":450,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":451,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":452,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":453,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":454,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":455,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":456,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":457,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":458,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":459,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":460,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":461,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":462,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":463,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":464,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":465,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":466,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":467,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":468,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":469,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":470,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":471,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":472,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":473,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":474,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":475,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":476,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":477,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":478,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":479,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":480,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":481,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":482,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":483,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":484,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":485,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":486,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":487,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":488,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":489,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":490,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":491,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":492,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":493,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":494,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":495,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":496,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":497,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":498,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":499,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":500,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":501,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":502,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":503,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":504,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":505,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":506,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":507,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":508,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":509,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":510,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":511,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":512,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":513,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":514,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":515,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":516,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":517,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":518,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":519,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":520,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":521,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":522,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":523,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":524,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":525,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":526,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":527,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":528,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":529,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":530,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":531,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":532,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":533,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":534,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":535,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":536,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":537,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":538,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":539,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":540,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":541,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":542,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":543,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":544,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":545,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":546,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":547,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":548,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":549,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":550,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":551,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":552,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":553,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":554,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":555,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":556,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":557,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":558,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":559,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":560,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":561,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":562,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":563,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":564,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":565,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":566,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":567,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":568,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":569,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":570,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":571,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":572,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":573,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":574,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":575,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":576,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":577,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":578,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":579,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":580,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":581,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":582,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":583,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":584,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":585,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":586,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":587,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":588,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":589,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":590,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":591,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":592,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":593,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":594,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":595,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":596,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":597,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":598,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":599,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":600,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":601,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":602,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":603,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":604,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":605,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":606,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":607,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":608,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":609,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":610,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":611,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":612,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":613,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":614,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":615,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":616,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":617,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":618,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":619,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":620,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":621,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":622,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":623,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":624,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":625,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":626,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":627,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":628,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":629,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":630,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":631,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":632,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":633,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":634,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":635,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":636,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":637,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":638,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":639,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":640,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":641,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":642,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":643,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":644,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":645,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":646,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":647,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":648,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":649,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":650,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":651,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":652,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":653,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":654,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":655,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":656,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":657,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":658,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":659,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":660,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":661,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":662,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":663,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":664,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":665,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":666,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":667,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":668,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":669,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":670,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":671,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":672,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":673,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":674,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":675,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":676,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":677,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":678,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":679,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":680,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":681,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":682,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":683,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":684,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":685,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":686,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":687,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":688,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":689,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":690,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":691,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":692,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":693,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":694,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":695,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":696,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":697,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":698,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":699,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":700,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":701,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":702,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":703,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":704,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":705,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":706,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":707,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":708,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":709,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":710,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":711,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":712,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":713,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":714,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":715,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":716,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":717,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":718,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":719,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":720,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":721,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":722,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":723,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":724,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":725,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":726,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":727,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":728,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":729,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":730,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":731,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":732,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":733,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":734,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":735,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":736,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":737,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":738,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":739,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":740,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":741,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":742,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":743,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":744,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":745,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":746,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":747,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":748,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":749,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":750,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":751,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":752,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":753,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":754,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":755,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":756,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":757,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":758,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":759,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":760,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":761,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":762,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":763,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":764,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":765,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":766,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":767,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":768,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":769,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":770,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":771,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":772,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":773,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":774,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":775,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":776,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":777,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":778,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":779,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":780,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":781,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":782,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":783,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":784,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":785,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":786,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":787,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":788,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":789,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":790,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":791,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":792,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":793,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":794,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":795,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":796,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":797,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":798,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":799,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":800,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":801,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":802,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":803,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":804,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":805,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":806,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":807,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":808,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":809,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":810,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":811,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":812,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":813,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":814,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":815,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":816,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":817,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":818,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":819,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":820,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":821,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":822,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":823,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":824,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":825,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":826,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":827,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":828,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":829,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":830,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":831,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":832,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":833,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":834,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":835,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":836,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":837,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":838,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":839,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":840,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":841,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":842,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":843,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":844,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":845,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":846,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":847,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":848,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":849,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":850,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":851,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":852,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":853,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":854,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":855,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":856,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":857,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":858,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":859,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":860,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":861,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":862,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":863,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":864,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":865,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":866,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":867,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":868,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":869,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":870,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":871,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":872,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":873,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":874,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":875,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":876,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":877,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":878,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":879,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":880,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":881,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":882,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":883,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":884,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":885,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":886,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":887,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":888,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":889,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":890,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":891,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":892,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":893,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":894,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":895,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":896,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":897,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":898,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":899,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":900,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":901,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":902,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":903,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":904,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":905,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":906,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":907,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":908,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":909,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":910,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":911,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":912,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":913,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":914,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":915,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":916,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":917,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":918,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":919,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":920,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":921,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":922,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":923,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":924,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":925,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":926,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":927,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":928,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":929,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":930,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":931,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":932,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":933,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":934,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":935,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":936,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":937,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":938,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":939,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":940,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":941,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":942,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":943,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":944,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":945,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":946,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":947,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":948,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":949,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":950,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":951,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":952,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":953,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":954,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":955,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":956,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":957,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":958,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":959,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":960,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":961,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":962,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":963,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":964,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":965,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":966,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":967,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":968,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":969,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":970,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":971,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":972,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":973,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":974,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":975,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":976,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":977,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":978,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":979,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":980,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":981,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":982,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":983,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":984,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":985,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":986,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":987,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":988,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":989,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":990,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":991,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":992,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":993,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":994,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":995,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":996,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":997,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":998,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":999,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1000,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1001,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1002,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1003,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1004,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1005,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1006,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1007,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1008,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1009,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1010,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1011,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1012,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1013,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1014,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1015,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1016,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1017,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1018,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1019,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1020,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1021,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1022,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1023,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1024,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1025,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1026,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1027,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1028,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1029,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1030,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1031,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1032,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1033,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1034,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1035,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1036,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1037,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1038,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1039,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1040,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1041,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1042,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1043,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1044,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1045,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1046,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1047,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1048,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1049,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1050,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1051,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1052,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1053,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1054,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1055,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1056,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1057,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1058,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1059,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1060,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1061,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1062,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1063,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1064,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1065,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1066,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1067,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1068,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1069,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1070,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1071,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1072,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1073,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1074,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1075,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1076,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1077,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1078,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1079,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1080,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1081,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1082,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1083,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1084,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1085,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1086,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1087,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1088,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1089,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1090,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1091,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1092,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1093,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1094,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1095,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1096,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1097,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1098,"column":0},"generated":{"line":1102,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1099,"column":0},"generated":{"line":1103,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1100,"column":0},"generated":{"line":1104,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1101,"column":0},"generated":{"line":1105,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1102,"column":0},"generated":{"line":1106,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1103,"column":0},"generated":{"line":1107,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1104,"column":0},"generated":{"line":1108,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1105,"column":0},"generated":{"line":1109,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1106,"column":0},"generated":{"line":1110,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1107,"column":0},"generated":{"line":1111,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1108,"column":0},"generated":{"line":1112,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1109,"column":0},"generated":{"line":1113,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1110,"column":0},"generated":{"line":1114,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1111,"column":0},"generated":{"line":1115,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1112,"column":0},"generated":{"line":1116,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1113,"column":0},"generated":{"line":1117,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1114,"column":0},"generated":{"line":1118,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1115,"column":0},"generated":{"line":1119,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1116,"column":0},"generated":{"line":1120,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1117,"column":0},"generated":{"line":1121,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1118,"column":0},"generated":{"line":1122,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1119,"column":0},"generated":{"line":1123,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1120,"column":0},"generated":{"line":1124,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1121,"column":0},"generated":{"line":1125,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1122,"column":0},"generated":{"line":1126,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1123,"column":0},"generated":{"line":1127,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1124,"column":0},"generated":{"line":1128,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1125,"column":0},"generated":{"line":1129,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1126,"column":0},"generated":{"line":1130,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1127,"column":0},"generated":{"line":1131,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1128,"column":0},"generated":{"line":1132,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1129,"column":0},"generated":{"line":1133,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1130,"column":0},"generated":{"line":1134,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1131,"column":0},"generated":{"line":1135,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1132,"column":0},"generated":{"line":1136,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1133,"column":0},"generated":{"line":1137,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1134,"column":0},"generated":{"line":1138,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1135,"column":0},"generated":{"line":1139,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1136,"column":0},"generated":{"line":1140,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1137,"column":0},"generated":{"line":1141,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1138,"column":0},"generated":{"line":1142,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1139,"column":0},"generated":{"line":1143,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1140,"column":0},"generated":{"line":1144,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1141,"column":0},"generated":{"line":1145,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1142,"column":0},"generated":{"line":1146,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1143,"column":0},"generated":{"line":1147,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1144,"column":0},"generated":{"line":1148,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1145,"column":0},"generated":{"line":1149,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1146,"column":0},"generated":{"line":1150,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1147,"column":0},"generated":{"line":1151,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1148,"column":0},"generated":{"line":1152,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1149,"column":0},"generated":{"line":1153,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1150,"column":0},"generated":{"line":1154,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1151,"column":0},"generated":{"line":1155,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1152,"column":0},"generated":{"line":1156,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1153,"column":0},"generated":{"line":1157,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1154,"column":0},"generated":{"line":1158,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1155,"column":0},"generated":{"line":1159,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1156,"column":0},"generated":{"line":1160,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1157,"column":0},"generated":{"line":1161,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1158,"column":0},"generated":{"line":1162,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1159,"column":0},"generated":{"line":1163,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1160,"column":0},"generated":{"line":1164,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1161,"column":0},"generated":{"line":1165,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1162,"column":0},"generated":{"line":1166,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1163,"column":0},"generated":{"line":1167,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1164,"column":0},"generated":{"line":1168,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1165,"column":0},"generated":{"line":1169,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1166,"column":0},"generated":{"line":1170,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1167,"column":0},"generated":{"line":1171,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1168,"column":0},"generated":{"line":1172,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1169,"column":0},"generated":{"line":1173,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1170,"column":0},"generated":{"line":1174,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1171,"column":0},"generated":{"line":1175,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1172,"column":0},"generated":{"line":1176,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1173,"column":0},"generated":{"line":1177,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1174,"column":0},"generated":{"line":1178,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1175,"column":0},"generated":{"line":1179,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1176,"column":0},"generated":{"line":1180,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1177,"column":0},"generated":{"line":1181,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1178,"column":0},"generated":{"line":1182,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1179,"column":0},"generated":{"line":1183,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1180,"column":0},"generated":{"line":1184,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1181,"column":0},"generated":{"line":1185,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1182,"column":0},"generated":{"line":1186,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1183,"column":0},"generated":{"line":1187,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1184,"column":0},"generated":{"line":1188,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1185,"column":0},"generated":{"line":1189,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1186,"column":0},"generated":{"line":1190,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1187,"column":0},"generated":{"line":1191,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1188,"column":0},"generated":{"line":1192,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1189,"column":0},"generated":{"line":1193,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1190,"column":0},"generated":{"line":1194,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1191,"column":0},"generated":{"line":1195,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1192,"column":0},"generated":{"line":1196,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1193,"column":0},"generated":{"line":1197,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1194,"column":0},"generated":{"line":1198,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1195,"column":0},"generated":{"line":1199,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1196,"column":0},"generated":{"line":1200,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1197,"column":0},"generated":{"line":1201,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1198,"column":0},"generated":{"line":1202,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1199,"column":0},"generated":{"line":1203,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1200,"column":0},"generated":{"line":1204,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1201,"column":0},"generated":{"line":1205,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1202,"column":0},"generated":{"line":1206,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1203,"column":0},"generated":{"line":1207,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1204,"column":0},"generated":{"line":1208,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1205,"column":0},"generated":{"line":1209,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1206,"column":0},"generated":{"line":1210,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1207,"column":0},"generated":{"line":1211,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1208,"column":0},"generated":{"line":1212,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1209,"column":0},"generated":{"line":1213,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1210,"column":0},"generated":{"line":1214,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1211,"column":0},"generated":{"line":1215,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1212,"column":0},"generated":{"line":1216,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1213,"column":0},"generated":{"line":1217,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1214,"column":0},"generated":{"line":1218,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1215,"column":0},"generated":{"line":1219,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1216,"column":0},"generated":{"line":1220,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1217,"column":0},"generated":{"line":1221,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1218,"column":0},"generated":{"line":1222,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1219,"column":0},"generated":{"line":1223,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1220,"column":0},"generated":{"line":1224,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1221,"column":0},"generated":{"line":1225,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1222,"column":0},"generated":{"line":1226,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1223,"column":0},"generated":{"line":1227,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1224,"column":0},"generated":{"line":1228,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1225,"column":0},"generated":{"line":1229,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1226,"column":0},"generated":{"line":1230,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1227,"column":0},"generated":{"line":1231,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1228,"column":0},"generated":{"line":1232,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1229,"column":0},"generated":{"line":1233,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1230,"column":0},"generated":{"line":1234,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1231,"column":0},"generated":{"line":1235,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1232,"column":0},"generated":{"line":1236,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1233,"column":0},"generated":{"line":1237,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1234,"column":0},"generated":{"line":1238,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1235,"column":0},"generated":{"line":1239,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1236,"column":0},"generated":{"line":1240,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1237,"column":0},"generated":{"line":1241,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1238,"column":0},"generated":{"line":1242,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1239,"column":0},"generated":{"line":1243,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1240,"column":0},"generated":{"line":1244,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1241,"column":0},"generated":{"line":1245,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1242,"column":0},"generated":{"line":1246,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1243,"column":0},"generated":{"line":1247,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1244,"column":0},"generated":{"line":1248,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1245,"column":0},"generated":{"line":1249,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1246,"column":0},"generated":{"line":1250,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1247,"column":0},"generated":{"line":1251,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1248,"column":0},"generated":{"line":1252,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1249,"column":0},"generated":{"line":1253,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1250,"column":0},"generated":{"line":1254,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1251,"column":0},"generated":{"line":1255,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1252,"column":0},"generated":{"line":1256,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1253,"column":0},"generated":{"line":1257,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1254,"column":0},"generated":{"line":1258,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1255,"column":0},"generated":{"line":1259,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1256,"column":0},"generated":{"line":1260,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1257,"column":0},"generated":{"line":1261,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1258,"column":0},"generated":{"line":1262,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1259,"column":0},"generated":{"line":1263,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1260,"column":0},"generated":{"line":1264,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1261,"column":0},"generated":{"line":1265,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1262,"column":0},"generated":{"line":1266,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1263,"column":0},"generated":{"line":1267,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1264,"column":0},"generated":{"line":1268,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1265,"column":0},"generated":{"line":1269,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1266,"column":0},"generated":{"line":1270,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1267,"column":0},"generated":{"line":1271,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1268,"column":0},"generated":{"line":1272,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1269,"column":0},"generated":{"line":1273,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1270,"column":0},"generated":{"line":1274,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1271,"column":0},"generated":{"line":1275,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1272,"column":0},"generated":{"line":1276,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1273,"column":0},"generated":{"line":1277,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1274,"column":0},"generated":{"line":1278,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1275,"column":0},"generated":{"line":1279,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1276,"column":0},"generated":{"line":1280,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1277,"column":0},"generated":{"line":1281,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1278,"column":0},"generated":{"line":1282,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1279,"column":0},"generated":{"line":1283,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1280,"column":0},"generated":{"line":1284,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1281,"column":0},"generated":{"line":1285,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1282,"column":0},"generated":{"line":1286,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1283,"column":0},"generated":{"line":1287,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1284,"column":0},"generated":{"line":1288,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1285,"column":0},"generated":{"line":1289,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1286,"column":0},"generated":{"line":1290,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1287,"column":0},"generated":{"line":1291,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1288,"column":0},"generated":{"line":1292,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1289,"column":0},"generated":{"line":1293,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1290,"column":0},"generated":{"line":1294,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1291,"column":0},"generated":{"line":1295,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1292,"column":0},"generated":{"line":1296,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1293,"column":0},"generated":{"line":1297,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1294,"column":0},"generated":{"line":1298,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1295,"column":0},"generated":{"line":1299,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1296,"column":0},"generated":{"line":1300,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1297,"column":0},"generated":{"line":1301,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1298,"column":0},"generated":{"line":1302,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1299,"column":0},"generated":{"line":1303,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1300,"column":0},"generated":{"line":1304,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1301,"column":0},"generated":{"line":1305,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1302,"column":0},"generated":{"line":1306,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1303,"column":0},"generated":{"line":1307,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1304,"column":0},"generated":{"line":1308,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1305,"column":0},"generated":{"line":1309,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1306,"column":0},"generated":{"line":1310,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1307,"column":0},"generated":{"line":1311,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1308,"column":0},"generated":{"line":1312,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1309,"column":0},"generated":{"line":1313,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1310,"column":0},"generated":{"line":1314,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1311,"column":0},"generated":{"line":1315,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1312,"column":0},"generated":{"line":1316,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1313,"column":0},"generated":{"line":1317,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1314,"column":0},"generated":{"line":1318,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1315,"column":0},"generated":{"line":1319,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1316,"column":0},"generated":{"line":1320,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1317,"column":0},"generated":{"line":1321,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1318,"column":0},"generated":{"line":1322,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1319,"column":0},"generated":{"line":1323,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1320,"column":0},"generated":{"line":1324,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1321,"column":0},"generated":{"line":1325,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1322,"column":0},"generated":{"line":1326,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1323,"column":0},"generated":{"line":1327,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1324,"column":0},"generated":{"line":1328,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1325,"column":0},"generated":{"line":1329,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1326,"column":0},"generated":{"line":1330,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1327,"column":0},"generated":{"line":1331,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1328,"column":0},"generated":{"line":1332,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1329,"column":0},"generated":{"line":1333,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1330,"column":0},"generated":{"line":1334,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1331,"column":0},"generated":{"line":1335,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1332,"column":0},"generated":{"line":1336,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1333,"column":0},"generated":{"line":1337,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1334,"column":0},"generated":{"line":1338,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1335,"column":0},"generated":{"line":1339,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1336,"column":0},"generated":{"line":1340,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1337,"column":0},"generated":{"line":1341,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1338,"column":0},"generated":{"line":1342,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1339,"column":0},"generated":{"line":1343,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1340,"column":0},"generated":{"line":1344,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1341,"column":0},"generated":{"line":1345,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1342,"column":0},"generated":{"line":1346,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1343,"column":0},"generated":{"line":1347,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1344,"column":0},"generated":{"line":1348,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1345,"column":0},"generated":{"line":1349,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1346,"column":0},"generated":{"line":1350,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1347,"column":0},"generated":{"line":1351,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1348,"column":0},"generated":{"line":1352,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1349,"column":0},"generated":{"line":1353,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1350,"column":0},"generated":{"line":1354,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1351,"column":0},"generated":{"line":1355,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1352,"column":0},"generated":{"line":1356,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1353,"column":0},"generated":{"line":1357,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1354,"column":0},"generated":{"line":1358,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1355,"column":0},"generated":{"line":1359,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1356,"column":0},"generated":{"line":1360,"column":0}},{"source":"../node_modules/web3-providers/dist/web3-providers.umd.js","original":{"line":1357,"column":0},"generated":{"line":1361,"column":0}}],"sources":{"../node_modules/web3-providers/dist/web3-providers.umd.js":"(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass'), require('websocket'), require('xhr2-cookies'), require('url-parse'), require('@babel/runtime/helpers/typeof'), require('lodash/isFunction'), require('lodash/isObject'), require('@babel/runtime/helpers/possibleConstructorReturn'), require('@babel/runtime/helpers/getPrototypeOf'), require('@babel/runtime/helpers/get'), require('@babel/runtime/helpers/inherits'), require('@babel/runtime/regenerator'), require('@babel/runtime/helpers/asyncToGenerator'), require('eventemitter3'), require('lodash/isArray'), require('http'), require('https')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass', 'websocket', 'xhr2-cookies', 'url-parse', '@babel/runtime/helpers/typeof', 'lodash/isFunction', 'lodash/isObject', '@babel/runtime/helpers/possibleConstructorReturn', '@babel/runtime/helpers/getPrototypeOf', '@babel/runtime/helpers/get', '@babel/runtime/helpers/inherits', '@babel/runtime/regenerator', '@babel/runtime/helpers/asyncToGenerator', 'eventemitter3', 'lodash/isArray', 'http', 'https'], factory) :\n    (global = global || self, factory(global.Web3Providers = {}, global._classCallCheck, global._createClass, global.websocket, global.xhr2Cookies, global.URL, global._typeof, global.isFunction, global.isObject, global._possibleConstructorReturn, global._getPrototypeOf, global._get, global._inherits, global._regeneratorRuntime, global._asyncToGenerator, global.EventEmitter, global.isArray, global.http, global.https));\n}(this, function (exports, _classCallCheck, _createClass, websocket, xhr2Cookies, URL, _typeof, isFunction, isObject, _possibleConstructorReturn, _getPrototypeOf, _get, _inherits, _regeneratorRuntime, _asyncToGenerator, EventEmitter, isArray, http, https) { 'use strict';\n\n    _classCallCheck = _classCallCheck && _classCallCheck.hasOwnProperty('default') ? _classCallCheck['default'] : _classCallCheck;\n    _createClass = _createClass && _createClass.hasOwnProperty('default') ? _createClass['default'] : _createClass;\n    URL = URL && URL.hasOwnProperty('default') ? URL['default'] : URL;\n    _typeof = _typeof && _typeof.hasOwnProperty('default') ? _typeof['default'] : _typeof;\n    isFunction = isFunction && isFunction.hasOwnProperty('default') ? isFunction['default'] : isFunction;\n    isObject = isObject && isObject.hasOwnProperty('default') ? isObject['default'] : isObject;\n    _possibleConstructorReturn = _possibleConstructorReturn && _possibleConstructorReturn.hasOwnProperty('default') ? _possibleConstructorReturn['default'] : _possibleConstructorReturn;\n    _getPrototypeOf = _getPrototypeOf && _getPrototypeOf.hasOwnProperty('default') ? _getPrototypeOf['default'] : _getPrototypeOf;\n    _get = _get && _get.hasOwnProperty('default') ? _get['default'] : _get;\n    _inherits = _inherits && _inherits.hasOwnProperty('default') ? _inherits['default'] : _inherits;\n    _regeneratorRuntime = _regeneratorRuntime && _regeneratorRuntime.hasOwnProperty('default') ? _regeneratorRuntime['default'] : _regeneratorRuntime;\n    _asyncToGenerator = _asyncToGenerator && _asyncToGenerator.hasOwnProperty('default') ? _asyncToGenerator['default'] : _asyncToGenerator;\n    EventEmitter = EventEmitter && EventEmitter.hasOwnProperty('default') ? EventEmitter['default'] : EventEmitter;\n    isArray = isArray && isArray.hasOwnProperty('default') ? isArray['default'] : isArray;\n    http = http && http.hasOwnProperty('default') ? http['default'] : http;\n    https = https && https.hasOwnProperty('default') ? https['default'] : https;\n\n    var global = function () {\n      return this || (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) === 'object' && self;\n    }() || new Function('return this')();\n    var ProviderResolver =\n    function () {\n      function ProviderResolver(providersModuleFactory) {\n        _classCallCheck(this, ProviderResolver);\n        this.providersModuleFactory = providersModuleFactory;\n      }\n      _createClass(ProviderResolver, [{\n        key: \"resolve\",\n        value: function resolve(provider, net) {\n          if (!provider) {\n            return provider;\n          }\n          if (typeof provider === 'string') {\n            if (/^http(s)?:\\/\\//i.test(provider)) {\n              return this.providersModuleFactory.createHttpProvider(provider);\n            }\n            if (/^ws(s)?:\\/\\//i.test(provider)) {\n              return this.providersModuleFactory.createWebsocketProvider(provider);\n            }\n            if (provider && isObject(net) && isFunction(net.connect)) {\n              return this.providersModuleFactory.createIpcProvider(provider, net);\n            }\n          }\n          if (provider.sendPayload && provider.subscribe) {\n            return provider;\n          }\n          if (typeof global.mist !== 'undefined' && provider.constructor.name === 'EthereumProvider') {\n            return this.providersModuleFactory.createMistEthereumProvider(provider);\n          }\n          if (provider.isEIP1193) {\n            return this.providersModuleFactory.createWeb3EthereumProvider(provider);\n          }\n          if (this.isMetamaskInpageProvider(provider)) {\n            return this.providersModuleFactory.createMetamaskProvider(provider);\n          }\n          return this.providersModuleFactory.createCustomProvider(provider);\n        }\n      }, {\n        key: \"isMetamaskInpageProvider\",\n        value: function isMetamaskInpageProvider(provider) {\n          return provider.constructor.name === 'MetamaskInpageProvider';\n        }\n      }]);\n      return ProviderResolver;\n    }();\n\n    var messageId = 0;\n    var JsonRpcMapper =\n    function () {\n      function JsonRpcMapper() {\n        _classCallCheck(this, JsonRpcMapper);\n      }\n      _createClass(JsonRpcMapper, null, [{\n        key: \"toPayload\",\n        value: function toPayload(method, params) {\n          if (!method) {\n            throw new Error(\"JSONRPC method should be specified for params: \\\"\".concat(JSON.stringify(params), \"\\\"!\"));\n          }\n          var id = messageId;\n          messageId++;\n          return {\n            jsonrpc: '2.0',\n            id: id,\n            method: method,\n            params: params || []\n          };\n        }\n      }]);\n      return JsonRpcMapper;\n    }();\n\n    var JsonRpcResponseValidator =\n    function () {\n      function JsonRpcResponseValidator() {\n        _classCallCheck(this, JsonRpcResponseValidator);\n      }\n      _createClass(JsonRpcResponseValidator, null, [{\n        key: \"validate\",\n        value: function validate(response) {\n          var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          if (isObject(response)) {\n            if (response.error) {\n              if (response.error instanceof Error) {\n                return new Error(\"Node error: \".concat(response.error.message));\n              }\n              return new Error(\"Node error: \".concat(JSON.stringify(response.error)));\n            }\n            if (payload && response.id !== payload.id) {\n              return new Error(\"Validation error: Invalid JSON-RPC response ID (request: \".concat(payload.id, \" / response: \").concat(response.id, \")\"));\n            }\n            if (response.result === undefined) {\n              return new Error('Validation error: Undefined JSON-RPC result');\n            }\n            return true;\n          }\n          return new Error('Validation error: Response should be of type Object');\n        }\n      }]);\n      return JsonRpcResponseValidator;\n    }();\n\n    var AbstractSocketProvider =\n    function (_EventEmitter) {\n      _inherits(AbstractSocketProvider, _EventEmitter);\n      function AbstractSocketProvider(connection, timeout) {\n        var _this;\n        _classCallCheck(this, AbstractSocketProvider);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AbstractSocketProvider).call(this));\n        _this.connection = connection;\n        _this.timeout = timeout;\n        _this.subscriptions = {};\n        _this.registerEventListeners();\n        _this.READY = 'ready';\n        _this.CONNECT = 'connect';\n        _this.ERROR = 'error';\n        _this.CLOSE = 'close';\n        _this.SOCKET_MESSAGE = 'socket_message';\n        _this.SOCKET_READY = 'socket_ready';\n        _this.SOCKET_CLOSE = 'socket_close';\n        _this.SOCKET_ERROR = 'socket_error';\n        _this.SOCKET_CONNECT = 'socket_connect';\n        _this.SOCKET_NETWORK_CHANGED = 'socket_networkChanged';\n        _this.SOCKET_ACCOUNTS_CHANGED = 'socket_accountsChanged';\n        return _this;\n      }\n      _createClass(AbstractSocketProvider, [{\n        key: \"supportsSubscriptions\",\n        value: function supportsSubscriptions() {\n          return true;\n        }\n      }, {\n        key: \"registerEventListeners\",\n        value: function registerEventListeners() {}\n      }, {\n        key: \"removeAllSocketListeners\",\n        value: function removeAllSocketListeners() {\n          this.removeAllListeners(this.SOCKET_MESSAGE);\n          this.removeAllListeners(this.SOCKET_READY);\n          this.removeAllListeners(this.SOCKET_CLOSE);\n          this.removeAllListeners(this.SOCKET_ERROR);\n          this.removeAllListeners(this.SOCKET_CONNECT);\n        }\n      }, {\n        key: \"disconnect\",\n        value: function disconnect(code, reason) {}\n      }, {\n        key: \"send\",\n        value: function () {\n          var _send = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee(method, parameters) {\n            var response, validationResult;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return this.sendPayload(JsonRpcMapper.toPayload(method, parameters));\n                  case 2:\n                    response = _context.sent;\n                    validationResult = JsonRpcResponseValidator.validate(response);\n                    if (!(validationResult instanceof Error)) {\n                      _context.next = 6;\n                      break;\n                    }\n                    throw validationResult;\n                  case 6:\n                    return _context.abrupt(\"return\", response.result);\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n          function send(_x, _x2) {\n            return _send.apply(this, arguments);\n          }\n          return send;\n        }()\n      }, {\n        key: \"sendBatch\",\n        value: function sendBatch(methods, moduleInstance) {\n          var payload = [];\n          methods.forEach(function (method) {\n            method.beforeExecution(moduleInstance);\n            payload.push(JsonRpcMapper.toPayload(method.rpcMethod, method.parameters));\n          });\n          return this.sendPayload(payload);\n        }\n      }, {\n        key: \"onReady\",\n        value: function onReady(event) {\n          this.emit(this.READY, event);\n          this.emit(this.SOCKET_READY, event);\n        }\n      }, {\n        key: \"onError\",\n        value: function onError(error) {\n          this.emit(this.ERROR, error);\n          this.emit(this.SOCKET_ERROR, error);\n          this.removeAllSocketListeners();\n          this.removeAllListeners();\n        }\n      }, {\n        key: \"onClose\",\n        value: function onClose() {\n          var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n          this.emit(this.CLOSE, error);\n          this.emit(this.SOCKET_CLOSE, error);\n          this.removeAllSocketListeners();\n          this.removeAllListeners();\n        }\n      }, {\n        key: \"onConnect\",\n        value: function () {\n          var _onConnect = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee2() {\n            var subscriptionKeys, subscriptionId, _i, _subscriptionKeys, key;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    subscriptionKeys = Object.keys(this.subscriptions);\n                    if (!(subscriptionKeys.length > 0)) {\n                      _context2.next = 13;\n                      break;\n                    }\n                    _i = 0, _subscriptionKeys = subscriptionKeys;\n                  case 3:\n                    if (!(_i < _subscriptionKeys.length)) {\n                      _context2.next = 13;\n                      break;\n                    }\n                    key = _subscriptionKeys[_i];\n                    _context2.next = 7;\n                    return this.subscribe(this.subscriptions[key].subscribeMethod, this.subscriptions[key].parameters[0], this.subscriptions[key].parameters.slice(1));\n                  case 7:\n                    subscriptionId = _context2.sent;\n                    delete this.subscriptions[subscriptionId];\n                    this.subscriptions[key].id = subscriptionId;\n                  case 10:\n                    _i++;\n                    _context2.next = 3;\n                    break;\n                  case 13:\n                    this.emit(this.SOCKET_CONNECT);\n                    this.emit(this.CONNECT);\n                  case 15:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, this);\n          }));\n          function onConnect() {\n            return _onConnect.apply(this, arguments);\n          }\n          return onConnect;\n        }()\n      }, {\n        key: \"onMessage\",\n        value: function onMessage(response) {\n          var event;\n          if (!isObject(response)) {\n            response = JSON.parse(response);\n          }\n          if (isArray(response)) {\n            event = response[0].id;\n          } else if (typeof response.id === 'undefined') {\n            event = this.getSubscriptionEvent(response.params.subscription);\n            response = response.params;\n          } else {\n            event = response.id;\n          }\n          this.emit(this.SOCKET_MESSAGE, response);\n          this.emit(event, response);\n        }\n      }, {\n        key: \"reset\",\n        value: function reset() {\n          this.removeAllListeners();\n          this.registerEventListeners();\n        }\n      }, {\n        key: \"subscribe\",\n        value: function subscribe() {\n          var _this2 = this;\n          var subscribeMethod = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'eth_subscribe';\n          var subscriptionMethod = arguments.length > 1 ? arguments[1] : undefined;\n          var parameters = arguments.length > 2 ? arguments[2] : undefined;\n          parameters.unshift(subscriptionMethod);\n          return this.send(subscribeMethod, parameters).then(function (subscriptionId) {\n            _this2.subscriptions[subscriptionId] = {\n              id: subscriptionId,\n              subscribeMethod: subscribeMethod,\n              parameters: parameters\n            };\n            return subscriptionId;\n          }).catch(function (error) {\n            throw new Error(\"Provider error: \".concat(error));\n          });\n        }\n      }, {\n        key: \"unsubscribe\",\n        value: function unsubscribe(subscriptionId) {\n          var _this3 = this;\n          var unsubscribeMethod = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'eth_unsubscribe';\n          if (this.hasSubscription(subscriptionId)) {\n            return this.send(unsubscribeMethod, [subscriptionId]).then(function (response) {\n              if (response) {\n                _this3.removeAllListeners(_this3.getSubscriptionEvent(subscriptionId));\n                delete _this3.subscriptions[subscriptionId];\n              }\n              return response;\n            });\n          }\n          return Promise.reject(new Error(\"Provider error: Subscription with ID \".concat(subscriptionId, \" does not exist.\")));\n        }\n      }, {\n        key: \"clearSubscriptions\",\n        value: function clearSubscriptions() {\n          var _this4 = this;\n          var unsubscribeMethod = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'eth_unsubscribe';\n          var unsubscribePromises = [];\n          Object.keys(this.subscriptions).forEach(function (key) {\n            _this4.removeAllListeners(key);\n            unsubscribePromises.push(_this4.unsubscribe(_this4.subscriptions[key].id, unsubscribeMethod));\n          });\n          return Promise.all(unsubscribePromises).then(function (results) {\n            if (results.includes(false)) {\n              throw new Error(\"Could not unsubscribe all subscriptions: \".concat(JSON.stringify(results)));\n            }\n            return true;\n          });\n        }\n      }, {\n        key: \"hasSubscription\",\n        value: function hasSubscription(subscriptionId) {\n          return typeof this.getSubscriptionEvent(subscriptionId) !== 'undefined';\n        }\n      }, {\n        key: \"getSubscriptionEvent\",\n        value: function getSubscriptionEvent(subscriptionId) {\n          var _this5 = this;\n          if (this.subscriptions[subscriptionId]) {\n            return subscriptionId;\n          }\n          var event;\n          Object.keys(this.subscriptions).forEach(function (key) {\n            if (_this5.subscriptions[key].id === subscriptionId) {\n              event = key;\n            }\n          });\n          return event;\n        }\n      }, {\n        key: \"connected\",\n        get: function get() {}\n      }]);\n      return AbstractSocketProvider;\n    }(EventEmitter);\n\n    var WebsocketProvider =\n    function (_AbstractSocketProvid) {\n      _inherits(WebsocketProvider, _AbstractSocketProvid);\n      function WebsocketProvider(connection, timeout) {\n        var _this;\n        _classCallCheck(this, WebsocketProvider);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(WebsocketProvider).call(this, connection, timeout));\n        _this.host = _this.connection.url;\n        return _this;\n      }\n      _createClass(WebsocketProvider, [{\n        key: \"onMessage\",\n        value: function onMessage(messageEvent) {\n          _get(_getPrototypeOf(WebsocketProvider.prototype), \"onMessage\", this).call(this, messageEvent.data);\n        }\n      }, {\n        key: \"onError\",\n        value: function onError(event) {\n          if (event.code === 'ECONNREFUSED') {\n            this.reconnect();\n            return;\n          }\n          _get(_getPrototypeOf(WebsocketProvider.prototype), \"onError\", this).call(this, event);\n        }\n      }, {\n        key: \"onClose\",\n        value: function onClose(closeEvent) {\n          if (closeEvent.code !== 1000 || closeEvent.wasClean === false) {\n            this.reconnect();\n            return;\n          }\n          _get(_getPrototypeOf(WebsocketProvider.prototype), \"onClose\", this).call(this);\n        }\n      }, {\n        key: \"reconnect\",\n        value: function reconnect() {\n          var _this2 = this;\n          setTimeout(function () {\n            _this2.removeAllSocketListeners();\n            var connection = [];\n            if (_this2.connection.constructor.name === 'W3CWebsocket') {\n              connection = new _this2.connection.constructor(_this2.host, _this2.connection._client.protocol, null, _this2.connection._client.headers, _this2.connection._client.requestOptions, _this2.connection._client.config);\n            } else {\n              connection = new _this2.connection.constructor(_this2.host, _this2.connection.protocol || undefined);\n            }\n            _this2.connection = connection;\n            _this2.registerEventListeners();\n          }, 5000);\n        }\n      }, {\n        key: \"disconnect\",\n        value: function disconnect() {\n          var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n          var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          this.connection.close(code, reason);\n        }\n      }, {\n        key: \"registerEventListeners\",\n        value: function registerEventListeners() {\n          this.connection.addEventListener('message', this.onMessage.bind(this));\n          this.connection.addEventListener('open', this.onReady.bind(this));\n          this.connection.addEventListener('open', this.onConnect.bind(this));\n          this.connection.addEventListener('close', this.onClose.bind(this));\n          this.connection.addEventListener('error', this.onError.bind(this));\n        }\n      }, {\n        key: \"removeAllListeners\",\n        value: function removeAllListeners(event) {\n          switch (event) {\n            case this.SOCKET_MESSAGE:\n              this.connection.removeEventListener('message', this.onMessage);\n              break;\n            case this.SOCKET_READY:\n              this.connection.removeEventListener('open', this.onReady);\n              break;\n            case this.SOCKET_CLOSE:\n              this.connection.removeEventListener('close', this.onClose);\n              break;\n            case this.SOCKET_ERROR:\n              this.connection.removeEventListener('error', this.onError);\n              break;\n            case this.SOCKET_CONNECT:\n              this.connection.removeEventListener('connect', this.onConnect);\n              break;\n          }\n          _get(_getPrototypeOf(WebsocketProvider.prototype), \"removeAllListeners\", this).call(this, event);\n        }\n      }, {\n        key: \"isConnecting\",\n        value: function isConnecting() {\n          return this.connection.readyState === this.connection.CONNECTING;\n        }\n      }, {\n        key: \"sendPayload\",\n        value: function sendPayload(payload) {\n          var _this3 = this;\n          return new Promise(function (resolve, reject) {\n            _this3.once('error', reject);\n            if (!_this3.isConnecting()) {\n              var timeout, id;\n              if (_this3.connection.readyState !== _this3.connection.OPEN) {\n                return reject(new Error('Connection error: Connection is not open on send()'));\n              }\n              try {\n                _this3.connection.send(JSON.stringify(payload));\n              } catch (error) {\n                reject(error);\n              }\n              if (_this3.timeout) {\n                timeout = setTimeout(function () {\n                  reject(new Error('Connection error: Timeout exceeded'));\n                }, _this3.timeout);\n              }\n              if (isArray(payload)) {\n                id = payload[0].id;\n              } else {\n                id = payload.id;\n              }\n              _this3.once(id, function (response) {\n                if (timeout) {\n                  clearTimeout(timeout);\n                }\n                return resolve(response);\n              });\n              return;\n            }\n            _this3.once('connect', function () {\n              _this3.sendPayload(payload).then(resolve).catch(reject);\n            });\n          });\n        }\n      }, {\n        key: \"connected\",\n        get: function get() {\n          return this.connection.readyState === this.connection.OPEN;\n        }\n      }]);\n      return WebsocketProvider;\n    }(AbstractSocketProvider);\n\n    var IpcProvider =\n    function (_AbstractSocketProvid) {\n      _inherits(IpcProvider, _AbstractSocketProvid);\n      function IpcProvider(connection, path) {\n        var _this;\n        _classCallCheck(this, IpcProvider);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(IpcProvider).call(this, connection, null));\n        _this.host = path;\n        _this.lastChunk = '';\n        return _this;\n      }\n      _createClass(IpcProvider, [{\n        key: \"disconnect\",\n        value: function disconnect() {\n          this.connection.destroy();\n        }\n      }, {\n        key: \"reconnect\",\n        value: function reconnect() {\n          this.connection.connect({\n            path: this.path\n          });\n        }\n      }, {\n        key: \"onMessage\",\n        value: function onMessage(message) {\n          var _this2 = this;\n          var result = null;\n          var returnValues = [];\n          var dechunkedData = message.toString().replace(/\\}[\\n\\r]?\\{/g, '}|--|{')\n          .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{')\n          .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{')\n          .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{')\n          .split('|--|');\n          dechunkedData.forEach(function (data) {\n            result = null;\n            if (_this2.lastChunk) {\n              data = _this2.lastChunk + data;\n            }\n            try {\n              result = JSON.parse(data);\n            } catch (error) {\n              _this2.lastChunk = data;\n              return;\n            }\n            _this2.lastChunk = null;\n            returnValues.push(result);\n          });\n          returnValues.forEach(function (chunk) {\n            _get(_getPrototypeOf(IpcProvider.prototype), \"onMessage\", _this2).call(_this2, chunk);\n          });\n        }\n      }, {\n        key: \"registerEventListeners\",\n        value: function registerEventListeners() {\n          this.connection.on('data', this.onMessage.bind(this));\n          this.connection.on('connect', this.onConnect.bind(this));\n          this.connection.on('error', this.onError.bind(this));\n          this.connection.on('close', this.onClose.bind(this));\n          this.connection.on('timeout', this.onClose.bind(this));\n          this.connection.on('ready', this.onReady.bind(this));\n        }\n      }, {\n        key: \"removeAllListeners\",\n        value: function removeAllListeners(event) {\n          switch (event) {\n            case this.SOCKET_MESSAGE:\n              this.connection.removeListener('data', this.onMessage);\n              break;\n            case this.SOCKET_READY:\n              this.connection.removeListener('ready', this.onReady);\n              break;\n            case this.SOCKET_CLOSE:\n              this.connection.removeListener('close', this.onClose);\n              break;\n            case this.SOCKET_ERROR:\n              this.connection.removeListener('error', this.onError);\n              break;\n            case this.SOCKET_CONNECT:\n              this.connection.removeListener('connect', this.onConnect);\n              break;\n          }\n          _get(_getPrototypeOf(IpcProvider.prototype), \"removeAllListeners\", this).call(this, event);\n        }\n      }, {\n        key: \"sendPayload\",\n        value: function sendPayload(payload) {\n          var _this3 = this;\n          return new Promise(function (resolve, reject) {\n            _this3.once('error', reject);\n            if (!_this3.connection.writable) {\n              _this3.connection.connect({\n                path: _this3.path\n              });\n            }\n            if (_this3.connection.write(JSON.stringify(payload))) {\n              var id;\n              if (isArray(payload)) {\n                id = payload[0].id;\n              } else {\n                id = payload.id;\n              }\n              _this3.once(id, resolve);\n              return;\n            }\n            return reject(new Error(\"Connection error: Couldn't write on the socket with Socket.write(payload)\"));\n          });\n        }\n      }, {\n        key: \"connected\",\n        get: function get() {\n          return !this.connection.pending;\n        }\n      }]);\n      return IpcProvider;\n    }(AbstractSocketProvider);\n\n    var HttpProvider =\n    function () {\n      function HttpProvider() {\n        var host = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http://localhost:8545';\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var providersModuleFactory = arguments.length > 2 ? arguments[2] : undefined;\n        _classCallCheck(this, HttpProvider);\n        this.host = host;\n        this.timeout = options.timeout || 0;\n        this.headers = options.headers;\n        this.withCredentials = options.withCredentials || false;\n        this.connected = true;\n        this.providersModuleFactory = providersModuleFactory;\n        this.agent = {};\n        var keepAlive = false;\n        if (options.keepAlive === true || options.keepAlive !== false) {\n          keepAlive = true;\n        }\n        if (host.substring(0, 5) === 'https') {\n          this.agent['httpsAgent'] = new https.Agent({\n            keepAlive: keepAlive\n          });\n        } else {\n          this.agent['httpAgent'] = new http.Agent({\n            keepAlive: keepAlive\n          });\n        }\n      }\n      _createClass(HttpProvider, [{\n        key: \"supportsSubscriptions\",\n        value: function supportsSubscriptions() {\n          return false;\n        }\n      }, {\n        key: \"subscribe\",\n        value: function subscribe() {\n          throw new Error('Subscriptions are not supported with the HttpProvider.');\n        }\n      }, {\n        key: \"unsubscribe\",\n        value: function unsubscribe() {\n          throw new Error('Subscriptions are not supported with the HttpProvider.');\n        }\n      }, {\n        key: \"disconnect\",\n        value: function disconnect() {\n          return true;\n        }\n      }, {\n        key: \"send\",\n        value: function () {\n          var _send = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee(method, parameters) {\n            var response, validationResult;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return this.sendPayload(JsonRpcMapper.toPayload(method, parameters));\n                  case 2:\n                    response = _context.sent;\n                    validationResult = JsonRpcResponseValidator.validate(response);\n                    if (!(validationResult instanceof Error)) {\n                      _context.next = 6;\n                      break;\n                    }\n                    throw validationResult;\n                  case 6:\n                    return _context.abrupt(\"return\", response.result);\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n          function send(_x, _x2) {\n            return _send.apply(this, arguments);\n          }\n          return send;\n        }()\n      }, {\n        key: \"sendBatch\",\n        value: function sendBatch(methods, moduleInstance) {\n          var payload = [];\n          methods.forEach(function (method) {\n            method.beforeExecution(moduleInstance);\n            payload.push(JsonRpcMapper.toPayload(method.rpcMethod, method.parameters));\n          });\n          return this.sendPayload(payload);\n        }\n      }, {\n        key: \"sendPayload\",\n        value: function sendPayload(payload) {\n          var _this = this;\n          return new Promise(function (resolve, reject) {\n            var request = _this.providersModuleFactory.createXMLHttpRequest(_this.host, _this.timeout, _this.headers, _this.agent, _this.withCredentials);\n            request.onreadystatechange = function () {\n              if (request.readyState !== 0 && request.readyState !== 1) {\n                _this.connected = true;\n              }\n              if (request.readyState === 4) {\n                if (request.status === 200) {\n                  try {\n                    return resolve(JSON.parse(request.responseText));\n                  } catch (error) {\n                    reject(new Error(\"Invalid JSON as response: \".concat(request.responseText)));\n                  }\n                }\n                if (_this.isInvalidHttpEndpoint(request)) {\n                  reject(new Error(\"Connection refused or URL couldn't be resolved: \".concat(_this.host)));\n                }\n                if (request.status >= 400 && request.status <= 499) {\n                  reject(new Error(\"HttpProvider ERROR: \".concat(request.responseText, \" (code: \").concat(request.status, \")\")));\n                }\n              }\n            };\n            request.ontimeout = function () {\n              _this.connected = false;\n              reject(new Error(\"Connection error: Timeout exceeded after \".concat(_this.timeout, \"ms\")));\n            };\n            try {\n              request.send(JSON.stringify(payload));\n            } catch (error) {\n              _this.connected = false;\n              reject(error);\n            }\n          });\n        }\n      }, {\n        key: \"isInvalidHttpEndpoint\",\n        value: function isInvalidHttpEndpoint(request) {\n          return request.response === null && request.status === 0;\n        }\n      }]);\n      return HttpProvider;\n    }();\n\n    var BatchRequest =\n    function () {\n      function BatchRequest(moduleInstance) {\n        _classCallCheck(this, BatchRequest);\n        this.moduleInstance = moduleInstance;\n        this.methods = [];\n      }\n      _createClass(BatchRequest, [{\n        key: \"add\",\n        value: function add(method) {\n          if (!isObject(method) && method) {\n            throw new Error('Please provide a object of type AbstractMethod.');\n          }\n          this.methods.push(method);\n        }\n      }, {\n        key: \"execute\",\n        value: function execute() {\n          var _this = this;\n          return this.moduleInstance.currentProvider.sendBatch(this.methods, this.moduleInstance).then(function (response) {\n            var errors = [];\n            _this.methods.forEach(function (method, index) {\n              if (!isArray(response)) {\n                method.callback(new Error(\"BatchRequest error: Response should be of type Array but is: \".concat(_typeof(response))), null);\n                errors.push(\"Response should be of type Array but is: \".concat(_typeof(response)));\n                return;\n              }\n              var responseItem = response[index] || null;\n              var validationResult = JsonRpcResponseValidator.validate(responseItem);\n              if (validationResult) {\n                try {\n                  var mappedResult = method.afterExecution(responseItem.result);\n                  response[index] = mappedResult;\n                  method.callback(false, mappedResult);\n                } catch (error) {\n                  errors.push(error);\n                  method.callback(error, null);\n                }\n                return;\n              }\n              errors.push(validationResult);\n              method.callback(validationResult, null);\n            });\n            if (errors.length > 0) {\n              throw new Error(\"BatchRequest error: \".concat(JSON.stringify(errors)));\n            }\n            return {\n              methods: _this.methods,\n              response: response\n            };\n          });\n        }\n      }]);\n      return BatchRequest;\n    }();\n\n    var Web3EthereumProvider =\n    function (_AbstractSocketProvid) {\n      _inherits(Web3EthereumProvider, _AbstractSocketProvid);\n      function Web3EthereumProvider(connection) {\n        var _this;\n        _classCallCheck(this, Web3EthereumProvider);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Web3EthereumProvider).call(this, connection, null));\n        _this.host = 'Web3EthereumProvider';\n        return _this;\n      }\n      _createClass(Web3EthereumProvider, [{\n        key: \"registerEventListeners\",\n        value: function registerEventListeners() {\n          this.connection.on('notification', this.onMessage.bind(this));\n          this.connection.on('connect', this.onConnect.bind(this));\n          this.connection.on('connect', this.onReady.bind(this));\n          this.connection.on('close', this.onClose.bind(this));\n          this.connection.on('networkChanged', this.onNetworkChanged.bind(this));\n          this.connection.on('accountsChanged', this.onAccountsChanged.bind(this));\n        }\n      }, {\n        key: \"removeAllListeners\",\n        value: function removeAllListeners(event) {\n          switch (event) {\n            case this.SOCKET_NETWORK_CHANGED:\n              this.connection.removeListener('networkChanged', this.onNetworkChanged);\n              break;\n            case this.SOCKET_ACCOUNTS_CHANGED:\n              this.connection.removeListener('accountsChanged', this.onAccountsChanged);\n              break;\n            case this.SOCKET_MESSAGE:\n              this.connection.removeListener('notification', this.onMessage);\n              break;\n            case this.SOCKET_READY:\n              this.connection.removeListener('connect', this.onReady);\n              break;\n            case this.SOCKET_CLOSE:\n              this.connection.removeListener('close', this.onClose);\n              break;\n            case this.SOCKET_ERROR:\n              this.connection.removeListener('close', this.onError);\n              break;\n            case this.SOCKET_CONNECT:\n              this.connection.removeListener('connect', this.onConnect);\n              break;\n          }\n          _get(_getPrototypeOf(Web3EthereumProvider.prototype), \"removeAllListeners\", this).call(this, event);\n        }\n      }, {\n        key: \"removeAllSocketListeners\",\n        value: function removeAllSocketListeners() {\n          this.connection.removeAllListeners();\n        }\n      }, {\n        key: \"onNetworkChanged\",\n        value: function onNetworkChanged(networkId) {\n          this.emit('networkChanged', networkId);\n        }\n      }, {\n        key: \"onAccountsChanged\",\n        value: function onAccountsChanged(accounts) {\n          this.emit('accountsChanged', accounts);\n        }\n      }, {\n        key: \"onMessage\",\n        value: function onMessage(response) {\n          this.emit(this.getSubscriptionEvent(response.subscription), response);\n        }\n      }, {\n        key: \"send\",\n        value: function () {\n          var _send = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee(method, parameters) {\n            var response, validationResult;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    response = this.connection.send(method, parameters);\n                    validationResult = JsonRpcResponseValidator.validate(response);\n                    if (!(validationResult instanceof Error)) {\n                      _context.next = 4;\n                      break;\n                    }\n                    throw validationResult;\n                  case 4:\n                    return _context.abrupt(\"return\", response);\n                  case 5:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n          function send(_x, _x2) {\n            return _send.apply(this, arguments);\n          }\n          return send;\n        }()\n      }, {\n        key: \"sendBatch\",\n        value: function sendBatch(methods, moduleInstance) {\n          var _this2 = this;\n          var methodCalls = [];\n          methods.forEach(function (method) {\n            method.beforeExecution(moduleInstance);\n            methodCalls.push(_this2.connection.send(method.rpcMethod, method.parameters));\n          });\n          return Promise.all(methodCalls);\n        }\n      }]);\n      return Web3EthereumProvider;\n    }(AbstractSocketProvider);\n\n    var MetamaskProvider =\n    function (_AbstractSocketProvid) {\n      _inherits(MetamaskProvider, _AbstractSocketProvid);\n      function MetamaskProvider(inpageProvider) {\n        var _this;\n        _classCallCheck(this, MetamaskProvider);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(MetamaskProvider).call(this, inpageProvider, null));\n        _this.host = 'metamask';\n        return _this;\n      }\n      _createClass(MetamaskProvider, [{\n        key: \"registerEventListeners\",\n        value: function registerEventListeners() {\n          this.connection.on('accountsChanged', this.onAccountsChanged.bind(this));\n          this.connection.on('networkChanged', this.onReady.bind(this));\n          this.connection.on('networkChanged', this.onNetworkChanged.bind(this));\n          this.connection.on('data', this.onMessage.bind(this));\n          this.connection.on('error', this.onError.bind(this));\n        }\n      }, {\n        key: \"onMessage\",\n        value: function onMessage(metamaskParam, payload) {\n          _get(_getPrototypeOf(MetamaskProvider.prototype), \"onMessage\", this).call(this, payload);\n        }\n      }, {\n        key: \"removeAllListeners\",\n        value: function removeAllListeners(event) {\n          switch (event) {\n            case this.SOCKET_NETWORK_CHANGED:\n              this.connection.removeListener('networkChanged', this.onNetworkChanged);\n              break;\n            case this.SOCKET_ACCOUNTS_CHANGED:\n              this.connection.removeListener('accountsChanged', this.onAccountsChanged);\n              break;\n            case this.SOCKET_MESSAGE:\n              this.connection.removeListener('data', this.onMessage);\n              break;\n            case this.SOCKET_ERROR:\n              this.connection.removeListener('error', this.onError);\n              break;\n          }\n          _get(_getPrototypeOf(MetamaskProvider.prototype), \"removeAllListeners\", this).call(this, event);\n        }\n      }, {\n        key: \"removeAllSocketListeners\",\n        value: function removeAllSocketListeners() {\n          this.connection.removeListener(this.SOCKET_NETWORK_CHANGED, this.onNetworkChanged);\n          this.connection.removeListener(this.SOCKET_ACCOUNTS_CHANGED, this.onAccountsChanged);\n          _get(_getPrototypeOf(MetamaskProvider.prototype), \"removeAllSocketListeners\", this).call(this);\n        }\n      }, {\n        key: \"onNetworkChanged\",\n        value: function onNetworkChanged(networkId) {\n          this.emit('networkChanged', networkId);\n        }\n      }, {\n        key: \"onAccountsChanged\",\n        value: function onAccountsChanged(accounts) {\n          this.emit('accountsChanged', accounts);\n        }\n      }, {\n        key: \"disconnect\",\n        value: function disconnect() {\n          return true;\n        }\n      }, {\n        key: \"sendPayload\",\n        value: function sendPayload(payload) {\n          var _this2 = this;\n          return new Promise(function (resolve, reject) {\n            _this2.connection.send(payload, function (error, response) {\n              _this2.removeAllListeners(payload.id);\n              if (!error) {\n                return resolve(response);\n              }\n              reject(error);\n            });\n          });\n        }\n      }, {\n        key: \"connected\",\n        get: function get() {\n          return this.connection.isConnected();\n        }\n      }]);\n      return MetamaskProvider;\n    }(AbstractSocketProvider);\n\n    var MistEthereumProvider =\n    function (_AbstractSocketProvid) {\n      _inherits(MistEthereumProvider, _AbstractSocketProvid);\n      function MistEthereumProvider(connection) {\n        var _this;\n        _classCallCheck(this, MistEthereumProvider);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(MistEthereumProvider).call(this, connection, null));\n        _this.host = 'mist';\n        return _this;\n      }\n      _createClass(MistEthereumProvider, [{\n        key: \"registerEventListeners\",\n        value: function registerEventListeners() {\n          this.connection.on('data', this.onMessage.bind(this));\n          this.connection.on('error', this.onError.bind(this));\n          this.connection.on('connect', this.onConnect.bind(this));\n          this.connection.on('connect', this.onReady.bind(this));\n          this.connection.on('end', this.onClose.bind(this));\n        }\n      }, {\n        key: \"removeAllListeners\",\n        value: function removeAllListeners(event) {\n          switch (event) {\n            case this.SOCKET_MESSAGE:\n              this.connection.removeListener('data', this.onMessage);\n              break;\n            case this.SOCKET_ERROR:\n              this.connection.removeListener('error', this.onError);\n              break;\n            case this.SOCKET_CONNECT:\n              this.connection.removeListener('connect', this.onConnect);\n              break;\n            case this.SOCKET_READY:\n              this.connection.removeListener('connect', this.onConnect);\n              break;\n            case this.SOCKET_CLOSE:\n              this.connection.removeListener('end', this.onClose);\n              break;\n          }\n          _get(_getPrototypeOf(MistEthereumProvider.prototype), \"removeAllListeners\", this).call(this, event);\n        }\n      }, {\n        key: \"disconnect\",\n        value: function disconnect() {\n          return true;\n        }\n      }, {\n        key: \"sendPayload\",\n        value: function sendPayload(payload) {\n          var _this2 = this;\n          return new Promise(function (resolve, reject) {\n            _this2.connection.send(payload, function (error, response) {\n              _this2.removeAllListeners(payload.id);\n              if (!error) {\n                return resolve(response);\n              }\n              reject(error);\n            });\n          });\n        }\n      }, {\n        key: \"connected\",\n        get: function get() {\n          return this.connection.isConnected();\n        }\n      }]);\n      return MistEthereumProvider;\n    }(AbstractSocketProvider);\n\n    var CustomProvider =\n    function () {\n      function CustomProvider(connection) {\n        _classCallCheck(this, CustomProvider);\n        this.host = 'CustomProvider';\n        this.connection = connection;\n        this.checkConnectionMethods();\n      }\n      _createClass(CustomProvider, [{\n        key: \"supportsSubscriptions\",\n        value: function supportsSubscriptions() {\n          return false;\n        }\n      }, {\n        key: \"checkConnectionMethods\",\n        value: function checkConnectionMethods() {\n          if (this.connection.send || this.connection.sendAsync) {\n            return true;\n          }\n          throw new Error('Invalid provider injected!');\n        }\n      }, {\n        key: \"subscribe\",\n        value: function subscribe() {\n          throw new Error('Subscriptions are not supported with the CustomProvider.');\n        }\n      }, {\n        key: \"unsubscribe\",\n        value: function unsubscribe() {\n          throw new Error('Subscriptions are not supported with the CustomProvider.');\n        }\n      }, {\n        key: \"send\",\n        value: function () {\n          var _send = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee(method, parameters) {\n            var response, validationResult;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return this.sendPayload(JsonRpcMapper.toPayload(method, parameters));\n                  case 2:\n                    response = _context.sent;\n                    validationResult = JsonRpcResponseValidator.validate(response);\n                    if (!(validationResult instanceof Error)) {\n                      _context.next = 6;\n                      break;\n                    }\n                    throw validationResult;\n                  case 6:\n                    return _context.abrupt(\"return\", response.result);\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n          function send(_x, _x2) {\n            return _send.apply(this, arguments);\n          }\n          return send;\n        }()\n      }, {\n        key: \"sendBatch\",\n        value: function sendBatch(methods, moduleInstance) {\n          var payload = [];\n          methods.forEach(function (method) {\n            method.beforeExecution(moduleInstance);\n            payload.push(JsonRpcMapper.toPayload(method.rpcMethod, method.parameters));\n          });\n          return this.sendPayload(payload);\n        }\n      }, {\n        key: \"sendPayload\",\n        value: function sendPayload(payload) {\n          var _this = this;\n          return new Promise(function (resolve, reject) {\n            if (_this.connection.sendAsync) {\n              _this.connection.sendAsync(payload, function (error, response) {\n                if (!error) {\n                  resolve(response);\n                }\n                reject(error);\n              });\n              return;\n            }\n            _this.connection.send(payload, function (error, response) {\n              if (!error) {\n                resolve(response);\n              }\n              reject(error);\n            });\n          });\n        }\n      }]);\n      return CustomProvider;\n    }();\n\n    var ProvidersModuleFactory =\n    function () {\n      function ProvidersModuleFactory() {\n        _classCallCheck(this, ProvidersModuleFactory);\n      }\n      _createClass(ProvidersModuleFactory, [{\n        key: \"createBatchRequest\",\n        value: function createBatchRequest(moduleInstance) {\n          return new BatchRequest(moduleInstance);\n        }\n      }, {\n        key: \"createProviderResolver\",\n        value: function createProviderResolver() {\n          return new ProviderResolver(this);\n        }\n      }, {\n        key: \"createHttpProvider\",\n        value: function createHttpProvider(url) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          return new HttpProvider(url, options, this);\n        }\n      }, {\n        key: \"createXMLHttpRequest\",\n        value: function createXMLHttpRequest(host, timeout, headers, agent, withCredentials) {\n          var request;\n          if (typeof process !== 'undefined' && process.versions != null && process.versions.node != null) {\n            request = new xhr2Cookies.XMLHttpRequest();\n            request.nodejsSet(agent);\n          } else {\n            request = new XMLHttpRequest();\n          }\n          request.open('POST', host, true);\n          request.setRequestHeader('Content-Type', 'application/json');\n          request.timeout = timeout;\n          request.withCredentials = withCredentials;\n          if (headers) {\n            headers.forEach(function (header) {\n              request.setRequestHeader(header.name, header.value);\n            });\n          }\n          return request;\n        }\n      }, {\n        key: \"createWebsocketProvider\",\n        value: function createWebsocketProvider(url) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          var connection = '';\n          if (typeof process !== 'undefined' && process.versions != null && process.versions.node != null) {\n            var headers = options.headers || {};\n            var urlObject = new URL(url);\n            if (!headers.authorization && urlObject.username && urlObject.password) {\n              var authToken = Buffer.from(\"\".concat(urlObject.username, \":\").concat(urlObject.password)).toString('base64');\n              headers.authorization = \"Basic \".concat(authToken);\n            }\n            connection = new websocket.w3cwebsocket(url, options.protocol, null, headers, null, options.clientConfig);\n          } else {\n            connection = new window.WebSocket(url, options.protocol);\n          }\n          return new WebsocketProvider(connection, options.timeout);\n        }\n      }, {\n        key: \"createIpcProvider\",\n        value: function createIpcProvider(path, net) {\n          return new IpcProvider(net.connect({\n            path: path\n          }), path);\n        }\n      }, {\n        key: \"createWeb3EthereumProvider\",\n        value: function createWeb3EthereumProvider(connection) {\n          return new Web3EthereumProvider(connection);\n        }\n      }, {\n        key: \"createMetamaskProvider\",\n        value: function createMetamaskProvider(inpageProvider) {\n          return new MetamaskProvider(inpageProvider);\n        }\n      }, {\n        key: \"createMistEthereumProvider\",\n        value: function createMistEthereumProvider(mistEthereumProvider) {\n          return new MistEthereumProvider(mistEthereumProvider);\n        }\n      }, {\n        key: \"createCustomProvider\",\n        value: function createCustomProvider(connection) {\n          return new CustomProvider(connection);\n        }\n      }]);\n      return ProvidersModuleFactory;\n    }();\n\n    var global$1 = function () {\n      return this || (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) === 'object' && self;\n    }() || new Function('return this')();\n    var ProviderDetector =\n    function () {\n      function ProviderDetector() {\n        _classCallCheck(this, ProviderDetector);\n      }\n      _createClass(ProviderDetector, null, [{\n        key: \"detect\",\n        value: function detect() {\n          if (typeof global$1.ethereumProvider !== 'undefined' && global$1.ethereumProvider.constructor.name === 'EthereumProvider') {\n            return global$1.ethereumProvider;\n          }\n          if (typeof global$1.web3 !== 'undefined' && global$1.web3.currentProvider) {\n            return global$1.web3.currentProvider;\n          }\n          return null;\n        }\n      }]);\n      return ProviderDetector;\n    }();\n\n    function HttpProvider$1(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new ProvidersModuleFactory().createHttpProvider(url, options);\n    }\n    function WebsocketProvider$1(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new ProvidersModuleFactory().createWebsocketProvider(url, options);\n    }\n    function IpcProvider$1(path, net) {\n      return new ProvidersModuleFactory().createIpcProvider(path, net);\n    }\n    function BatchRequest$1(moduleInstance) {\n      return new ProvidersModuleFactory().createBatchRequest(moduleInstance);\n    }\n    function ProviderResolver$1() {\n      return new ProvidersModuleFactory().createProviderResolver();\n    }\n\n    exports.BatchRequest = BatchRequest$1;\n    exports.HttpProvider = HttpProvider$1;\n    exports.IpcProvider = IpcProvider$1;\n    exports.ProviderDetector = ProviderDetector;\n    exports.ProviderResolver = ProviderResolver$1;\n    exports.ProvidersModuleFactory = ProvidersModuleFactory;\n    exports.Web3EthereumProvider = Web3EthereumProvider;\n    exports.WebsocketProvider = WebsocketProvider$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"},"lineCount":1361}},"error":null,"hash":"854b34812e668484199a0b48b1eb81e6","cacheData":{"env":{}}}